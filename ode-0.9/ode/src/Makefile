# Makefile.in generated by automake 1.10 from Makefile.am.
# ode/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/ODE
pkglibdir = $(libdir)/ODE
pkgincludedir = $(includedir)/ODE
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
traplib_PROGRAMS = libode$(EXEEXT)
#am__append_1 = -Wl,-soname,libode.so.0
am__append_2 = libOPCODE.a
am__append_3 = $(libOPCODE_a_OBJECTS)
#am__append_4 = libGIMPACT.a
#am__append_5 = $(libGIMPACT_a_OBJECTS)

###################################
#   G I M P A C T    S T U F F
###################################
#am__append_6 = libGIMPACT.a
#am__append_7 = collision_trimesh_gimpact.cpp \
#	collision_trimesh_trimesh.cpp \
#	collision_trimesh_sphere.cpp \
#	collision_trimesh_ray.cpp \
#	collision_trimesh_opcode.cpp \
#	collision_trimesh_box.cpp \
#	collision_trimesh_ccylinder.cpp \
#	collision_trimesh_distance.cpp \
#	collision_trimesh_internal.h \
#	collision_cylinder_trimesh.cpp \
#	collision_trimesh_plane.cpp
#am__append_8 = libGIMPACT.a
#am__append_9 = $(libGIMPACT_a_OBJECTS)
#am__append_10 = -I/home/mezl/Desktop/ode-0.9/GIMPACT/include -DdTRIMESH_ENABLED -DdTRIMESH_GIMPACT
#am__append_11 = -I/home/mezl/Desktop/ode-0.9/GIMPACT/include -DdTRIMESH_ENABLED -DdTRIMESH_GIMPACT

#################################
#   O P C O D E    S T U F F
#################################
am__append_12 = libOPCODE.a
am__append_13 = libOPCODE.a
am__append_14 = $(libOPCODE_a_OBJECTS)
am__append_15 = -I/home/mezl/Desktop/ode-0.9/OPCODE -I/home/mezl/Desktop/ode-0.9/OPCODE/Ice -DdTRIMESH_ENABLED -DdTRIMESH_OPCODE
am__append_16 = -I/home/mezl/Desktop/ode-0.9/OPCODE -I/home/mezl/Desktop/ode-0.9/OPCODE/Ice -DdTRIMESH_ENABLED -DdTRIMESH_OPCODE
am__append_17 = collision_trimesh_trimesh.cpp \
			collision_trimesh_sphere.cpp \
			collision_trimesh_ray.cpp \
			collision_trimesh_opcode.cpp \
			collision_trimesh_box.cpp \
			collision_trimesh_ccylinder.cpp \
			collision_trimesh_distance.cpp \
			collision_trimesh_internal.h \
                        collision_cylinder_trimesh.cpp \
                        collision_trimesh_plane.cpp

subdir = ode/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/ode/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(traplibdir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES) $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libGIMPACT_a_AR = $(AR) $(ARFLAGS)
libGIMPACT_a_LIBADD =
am__libGIMPACT_a_SOURCES_DIST =  \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp \
	/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp
#am_libGIMPACT_a_OBJECTS =  \
#	libGIMPACT_a-gim_boxpruning.$(OBJEXT) \
#	libGIMPACT_a-gim_contact.$(OBJEXT) \
#	libGIMPACT_a-gim_math.$(OBJEXT) \
#	libGIMPACT_a-gim_memory.$(OBJEXT) \
#	libGIMPACT_a-gim_tri_tri_overlap.$(OBJEXT) \
#	libGIMPACT_a-gim_trimesh.$(OBJEXT) \
#	libGIMPACT_a-gim_trimesh_capsule_collision.$(OBJEXT) \
#	libGIMPACT_a-gim_trimesh_ray_collision.$(OBJEXT) \
#	libGIMPACT_a-gim_trimesh_sphere_collision.$(OBJEXT) \
#	libGIMPACT_a-gim_trimesh_trimesh_collision.$(OBJEXT) \
#	libGIMPACT_a-gimpact.$(OBJEXT)
libGIMPACT_a_OBJECTS = $(am_libGIMPACT_a_OBJECTS)
libOPCODE_a_AR = $(AR) $(ARFLAGS)
libOPCODE_a_LIBADD =
am__libOPCODE_a_SOURCES_DIST = /home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp /home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp \
	/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp
am_libOPCODE_a_OBJECTS =  \
	libOPCODE_a-OPC_AABBCollider.$(OBJEXT) \
	libOPCODE_a-OPC_AABBTree.$(OBJEXT) \
	libOPCODE_a-OPC_BaseModel.$(OBJEXT) \
	libOPCODE_a-OPC_BoxPruning.$(OBJEXT) \
	libOPCODE_a-OPC_Collider.$(OBJEXT) \
	libOPCODE_a-OPC_Common.$(OBJEXT) \
	libOPCODE_a-OPC_HybridModel.$(OBJEXT) \
	libOPCODE_a-OPC_LSSCollider.$(OBJEXT) \
	libOPCODE_a-OPC_MeshInterface.$(OBJEXT) \
	libOPCODE_a-OPC_Model.$(OBJEXT) \
	libOPCODE_a-OPC_OBBCollider.$(OBJEXT) \
	libOPCODE_a-Opcode.$(OBJEXT) \
	libOPCODE_a-OPC_OptimizedTree.$(OBJEXT) \
	libOPCODE_a-OPC_Picking.$(OBJEXT) \
	libOPCODE_a-OPC_PlanesCollider.$(OBJEXT) \
	libOPCODE_a-OPC_RayCollider.$(OBJEXT) \
	libOPCODE_a-OPC_SphereCollider.$(OBJEXT) \
	libOPCODE_a-OPC_SweepAndPrune.$(OBJEXT) \
	libOPCODE_a-OPC_TreeBuilders.$(OBJEXT) \
	libOPCODE_a-OPC_TreeCollider.$(OBJEXT) \
	libOPCODE_a-OPC_VolumeCollider.$(OBJEXT) \
	libOPCODE_a-IceAABB.$(OBJEXT) \
	libOPCODE_a-IceContainer.$(OBJEXT) \
	libOPCODE_a-IceHPoint.$(OBJEXT) \
	libOPCODE_a-IceIndexedTriangle.$(OBJEXT) \
	libOPCODE_a-IceMatrix3x3.$(OBJEXT) \
	libOPCODE_a-IceMatrix4x4.$(OBJEXT) \
	libOPCODE_a-IceOBB.$(OBJEXT) \
	libOPCODE_a-IcePlane.$(OBJEXT) \
	libOPCODE_a-IcePoint.$(OBJEXT) \
	libOPCODE_a-IceRandom.$(OBJEXT) \
	libOPCODE_a-IceRay.$(OBJEXT) \
	libOPCODE_a-IceRevisitedRadix.$(OBJEXT) \
	libOPCODE_a-IceSegment.$(OBJEXT) \
	libOPCODE_a-IceTriangle.$(OBJEXT) \
	libOPCODE_a-IceUtils.$(OBJEXT)
libOPCODE_a_OBJECTS = $(am_libOPCODE_a_OBJECTS)
libfast_a_AR = $(AR) $(ARFLAGS)
libfast_a_LIBADD =
am_libfast_a_OBJECTS = libfast_a-fastldlt.$(OBJEXT) \
	libfast_a-fastltsolve.$(OBJEXT) libfast_a-fastdot.$(OBJEXT) \
	libfast_a-fastlsolve.$(OBJEXT)
libfast_a_OBJECTS = $(am_libfast_a_OBJECTS)
libode_a_AR = $(AR) $(ARFLAGS)
am__libode_a_SOURCES_DIST = objects.h obstack.cpp collision_util.cpp \
	obstack.h array.cpp collision_util.h ode.cpp array.h error.cpp \
	odemath.cpp collision_kernel.cpp export-dif.cpp quickstep.cpp \
	collision_kernel.h quickstep.h collision_quadtreespace.cpp \
	rotation.cpp collision_space.cpp collision_space_internal.h \
	collision_cylinder_box.cpp collision_cylinder_sphere.cpp \
	collision_cylinder_plane.cpp sphere.cpp box.cpp capsule.cpp \
	plane.cpp ray.cpp cylinder.cpp convex.cpp joint.cpp stack.h \
	collision_std.h joint.h step.cpp collision_transform.cpp \
	lcp.cpp step.h collision_transform.h lcp.h stepfast.cpp \
	mass.cpp testing.cpp mat.cpp testing.h mat.h timer.cpp \
	matrix.cpp util.cpp memory.cpp util.h misc.cpp heightfield.cpp \
	heightfield.h collision_trimesh_gimpact.cpp \
	collision_trimesh_trimesh.cpp collision_trimesh_sphere.cpp \
	collision_trimesh_ray.cpp collision_trimesh_opcode.cpp \
	collision_trimesh_box.cpp collision_trimesh_ccylinder.cpp \
	collision_trimesh_distance.cpp collision_trimesh_internal.h \
	collision_cylinder_trimesh.cpp collision_trimesh_plane.cpp
#am__objects_1 =  \
#	libode_a-collision_trimesh_gimpact.$(OBJEXT) \
#	libode_a-collision_trimesh_trimesh.$(OBJEXT) \
#	libode_a-collision_trimesh_sphere.$(OBJEXT) \
#	libode_a-collision_trimesh_ray.$(OBJEXT) \
#	libode_a-collision_trimesh_opcode.$(OBJEXT) \
#	libode_a-collision_trimesh_box.$(OBJEXT) \
#	libode_a-collision_trimesh_ccylinder.$(OBJEXT) \
#	libode_a-collision_trimesh_distance.$(OBJEXT) \
#	libode_a-collision_cylinder_trimesh.$(OBJEXT) \
#	libode_a-collision_trimesh_plane.$(OBJEXT)
am__objects_2 =  \
	libode_a-collision_trimesh_trimesh.$(OBJEXT) \
	libode_a-collision_trimesh_sphere.$(OBJEXT) \
	libode_a-collision_trimesh_ray.$(OBJEXT) \
	libode_a-collision_trimesh_opcode.$(OBJEXT) \
	libode_a-collision_trimesh_box.$(OBJEXT) \
	libode_a-collision_trimesh_ccylinder.$(OBJEXT) \
	libode_a-collision_trimesh_distance.$(OBJEXT) \
	libode_a-collision_cylinder_trimesh.$(OBJEXT) \
	libode_a-collision_trimesh_plane.$(OBJEXT)
am_libode_a_OBJECTS = libode_a-obstack.$(OBJEXT) \
	libode_a-collision_util.$(OBJEXT) libode_a-array.$(OBJEXT) \
	libode_a-ode.$(OBJEXT) libode_a-error.$(OBJEXT) \
	libode_a-odemath.$(OBJEXT) libode_a-collision_kernel.$(OBJEXT) \
	libode_a-export-dif.$(OBJEXT) libode_a-quickstep.$(OBJEXT) \
	libode_a-collision_quadtreespace.$(OBJEXT) \
	libode_a-rotation.$(OBJEXT) libode_a-collision_space.$(OBJEXT) \
	libode_a-collision_cylinder_box.$(OBJEXT) \
	libode_a-collision_cylinder_sphere.$(OBJEXT) \
	libode_a-collision_cylinder_plane.$(OBJEXT) \
	libode_a-sphere.$(OBJEXT) libode_a-box.$(OBJEXT) \
	libode_a-capsule.$(OBJEXT) libode_a-plane.$(OBJEXT) \
	libode_a-ray.$(OBJEXT) libode_a-cylinder.$(OBJEXT) \
	libode_a-convex.$(OBJEXT) libode_a-joint.$(OBJEXT) \
	libode_a-step.$(OBJEXT) libode_a-collision_transform.$(OBJEXT) \
	libode_a-lcp.$(OBJEXT) libode_a-stepfast.$(OBJEXT) \
	libode_a-mass.$(OBJEXT) libode_a-testing.$(OBJEXT) \
	libode_a-mat.$(OBJEXT) libode_a-timer.$(OBJEXT) \
	libode_a-matrix.$(OBJEXT) libode_a-util.$(OBJEXT) \
	libode_a-memory.$(OBJEXT) libode_a-misc.$(OBJEXT) \
	libode_a-heightfield.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
libode_a_OBJECTS = $(am_libode_a_OBJECTS)
traplibPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(traplib_PROGRAMS)
am_libode_OBJECTS =
libode_OBJECTS = $(am_libode_OBJECTS)
libode_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(libode_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include/ode
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libGIMPACT_a_SOURCES) $(libOPCODE_a_SOURCES) \
	$(libfast_a_SOURCES) $(libode_a_SOURCES) $(libode_SOURCES)
DIST_SOURCES = $(am__libGIMPACT_a_SOURCES_DIST) \
	$(am__libOPCODE_a_SOURCES_DIST) $(libfast_a_SOURCES) \
	$(am__libode_a_SOURCES_DIST) $(libode_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mezl/Desktop/ode-0.9/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /home/mezl/Desktop/ode-0.9/missing --run tar
ARCHFLAGS = 
AUTOCONF = ${SHELL} /home/mezl/Desktop/ode-0.9/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mezl/Desktop/ode-0.9/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mezl/Desktop/ode-0.9/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -I -L
CPP = gcc -E
CPPFLAGS =  -g
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -I -L
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DRAWSTUFF = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .so
GL_LIBS =  -lGL -lGLU -lXmu -lXi -lX11
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS =  -lstdc++ -lm -lpthread
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/mezl/Desktop/ode-0.9/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
ODE_AGE = 0
ODE_CURRENT = 0
ODE_RELEASE = 0.9.0
ODE_REVISION = 9
ODE_SONAME = libode.so.0
PACKAGE = ODE
PACKAGE_BUGREPORT = ode@ode.org
PACKAGE_NAME = ODE
PACKAGE_STRING = ODE 0.9.0
PACKAGE_TARNAME = ode
PACKAGE_VERSION = 0.9.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHARED_LDFLAGS = -shared
SHELL = /bin/sh
STRIP = 
TOPDIR = /home/mezl/Desktop/ode-0.9
VERSION = 0.9.0
WINDRES = 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/mezl/Desktop/ode-0.9/ode/src
abs_srcdir = /home/mezl/Desktop/ode-0.9/ode/src
abs_top_builddir = /home/mezl/Desktop/ode-0.9
abs_top_srcdir = /home/mezl/Desktop/ode-0.9
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_WINDRES = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/mezl/Desktop/ode-0.9/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
so_ext = .so
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_builddir = ../..
top_srcdir = ../..
AM_CXXFLAGS =  -I$(top_srcdir)/include \
	-I$(top_builddir)/include $(am__append_10) $(am__append_15)
AM_CPPFLAGS =  -I$(top_srcdir)/include -I$(top_builddir)/include
AM_CFLAGS =  -I$(top_srcdir)/include \
	-I$(top_builddir)/include $(am__append_11) $(am__append_16)
lib_LIBRARIES = libode.a
libode_a_CPPFLAGS = -O2 -fPIC

# Fake an executable in order to get a shared library
# Note the elegant and cunning way to trick Autotools to install a program
# in a lib directory. --Rodrigo
traplibdir = $(libdir)
libode_SOURCES = 
libode_DEPENDENCIES = libfast.a libode.a $(am__append_2) \
	$(am__append_4)
libode_LDFLAGS = -shared $(am__append_1)
libode_LDADD = $(libode_a_OBJECTS) $(libfast_a_OBJECTS) \
	$(am__append_3) $(am__append_5)

# convenience library to simulate per object cflags
noinst_LIBRARIES = libfast.a $(am__append_6) $(am__append_12)
libfast_a_CFLAGS = -O1 -fPIC
libfast_a_SOURCES = fastldlt.c fastltsolve.c fastdot.c fastlsolve.c
libode_a_DEPENDENCIES = libfast.a $(am__append_8) $(am__append_13)
libode_a_LIBADD = $(libfast_a_OBJECTS) $(am__append_9) \
	$(am__append_14)
libode_a_SOURCES = objects.h obstack.cpp collision_util.cpp obstack.h \
	array.cpp collision_util.h ode.cpp array.h error.cpp \
	odemath.cpp collision_kernel.cpp export-dif.cpp quickstep.cpp \
	collision_kernel.h quickstep.h collision_quadtreespace.cpp \
	rotation.cpp collision_space.cpp collision_space_internal.h \
	collision_cylinder_box.cpp collision_cylinder_sphere.cpp \
	collision_cylinder_plane.cpp sphere.cpp box.cpp capsule.cpp \
	plane.cpp ray.cpp cylinder.cpp convex.cpp joint.cpp stack.h \
	collision_std.h joint.h step.cpp collision_transform.cpp \
	lcp.cpp step.h collision_transform.h lcp.h stepfast.cpp \
	mass.cpp testing.cpp mat.cpp testing.h mat.h timer.cpp \
	matrix.cpp util.cpp memory.cpp util.h misc.cpp heightfield.cpp \
	heightfield.h $(am__append_7) $(am__append_17)
#libGIMPACT_a_CPPFLAGS = -O2 -fno-strict-aliasing -fPIC
#libGIMPACT_a_SOURCES = \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp \
#  /home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp

libOPCODE_a_CPPFLAGS = -O2 -fno-strict-aliasing -fPIC
libOPCODE_a_SOURCES = /home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp \
			/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  ode/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  ode/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libGIMPACT.a: $(libGIMPACT_a_OBJECTS) $(libGIMPACT_a_DEPENDENCIES) 
	-rm -f libGIMPACT.a
	$(libGIMPACT_a_AR) libGIMPACT.a $(libGIMPACT_a_OBJECTS) $(libGIMPACT_a_LIBADD)
	$(RANLIB) libGIMPACT.a
libOPCODE.a: $(libOPCODE_a_OBJECTS) $(libOPCODE_a_DEPENDENCIES) 
	-rm -f libOPCODE.a
	$(libOPCODE_a_AR) libOPCODE.a $(libOPCODE_a_OBJECTS) $(libOPCODE_a_LIBADD)
	$(RANLIB) libOPCODE.a
libfast.a: $(libfast_a_OBJECTS) $(libfast_a_DEPENDENCIES) 
	-rm -f libfast.a
	$(libfast_a_AR) libfast.a $(libfast_a_OBJECTS) $(libfast_a_LIBADD)
	$(RANLIB) libfast.a
libode.a: $(libode_a_OBJECTS) $(libode_a_DEPENDENCIES) 
	-rm -f libode.a
	$(libode_a_AR) libode.a $(libode_a_OBJECTS) $(libode_a_LIBADD)
	$(RANLIB) libode.a
install-traplibPROGRAMS: $(traplib_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(traplibdir)" || $(MKDIR_P) "$(DESTDIR)$(traplibdir)"
	@list='$(traplib_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(traplibPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(traplibdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(traplibPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(traplibdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-traplibPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(traplib_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(traplibdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(traplibdir)/$$f"; \
	done

clean-traplibPROGRAMS:
	-test -z "$(traplib_PROGRAMS)" || rm -f $(traplib_PROGRAMS)
libode$(EXEEXT): $(libode_OBJECTS) $(libode_DEPENDENCIES) 
	@rm -f libode$(EXEEXT)
	$(libode_LINK) $(libode_OBJECTS) $(libode_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libGIMPACT_a-gim_boxpruning.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_contact.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_math.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_memory.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_trimesh.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Po
include ./$(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Po
include ./$(DEPDIR)/libGIMPACT_a-gimpact.Po
include ./$(DEPDIR)/libOPCODE_a-IceAABB.Po
include ./$(DEPDIR)/libOPCODE_a-IceContainer.Po
include ./$(DEPDIR)/libOPCODE_a-IceHPoint.Po
include ./$(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Po
include ./$(DEPDIR)/libOPCODE_a-IceMatrix3x3.Po
include ./$(DEPDIR)/libOPCODE_a-IceMatrix4x4.Po
include ./$(DEPDIR)/libOPCODE_a-IceOBB.Po
include ./$(DEPDIR)/libOPCODE_a-IcePlane.Po
include ./$(DEPDIR)/libOPCODE_a-IcePoint.Po
include ./$(DEPDIR)/libOPCODE_a-IceRandom.Po
include ./$(DEPDIR)/libOPCODE_a-IceRay.Po
include ./$(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Po
include ./$(DEPDIR)/libOPCODE_a-IceSegment.Po
include ./$(DEPDIR)/libOPCODE_a-IceTriangle.Po
include ./$(DEPDIR)/libOPCODE_a-IceUtils.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_AABBTree.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_BaseModel.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_Collider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_Common.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_HybridModel.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_Model.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_Picking.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_RayCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Po
include ./$(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Po
include ./$(DEPDIR)/libOPCODE_a-Opcode.Po
include ./$(DEPDIR)/libfast_a-fastdot.Po
include ./$(DEPDIR)/libfast_a-fastldlt.Po
include ./$(DEPDIR)/libfast_a-fastlsolve.Po
include ./$(DEPDIR)/libfast_a-fastltsolve.Po
include ./$(DEPDIR)/libode_a-array.Po
include ./$(DEPDIR)/libode_a-box.Po
include ./$(DEPDIR)/libode_a-capsule.Po
include ./$(DEPDIR)/libode_a-collision_cylinder_box.Po
include ./$(DEPDIR)/libode_a-collision_cylinder_plane.Po
include ./$(DEPDIR)/libode_a-collision_cylinder_sphere.Po
include ./$(DEPDIR)/libode_a-collision_cylinder_trimesh.Po
include ./$(DEPDIR)/libode_a-collision_kernel.Po
include ./$(DEPDIR)/libode_a-collision_quadtreespace.Po
include ./$(DEPDIR)/libode_a-collision_space.Po
include ./$(DEPDIR)/libode_a-collision_transform.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_box.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_ccylinder.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_distance.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_gimpact.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_opcode.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_plane.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_ray.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_sphere.Po
include ./$(DEPDIR)/libode_a-collision_trimesh_trimesh.Po
include ./$(DEPDIR)/libode_a-collision_util.Po
include ./$(DEPDIR)/libode_a-convex.Po
include ./$(DEPDIR)/libode_a-cylinder.Po
include ./$(DEPDIR)/libode_a-error.Po
include ./$(DEPDIR)/libode_a-export-dif.Po
include ./$(DEPDIR)/libode_a-heightfield.Po
include ./$(DEPDIR)/libode_a-joint.Po
include ./$(DEPDIR)/libode_a-lcp.Po
include ./$(DEPDIR)/libode_a-mass.Po
include ./$(DEPDIR)/libode_a-mat.Po
include ./$(DEPDIR)/libode_a-matrix.Po
include ./$(DEPDIR)/libode_a-memory.Po
include ./$(DEPDIR)/libode_a-misc.Po
include ./$(DEPDIR)/libode_a-obstack.Po
include ./$(DEPDIR)/libode_a-ode.Po
include ./$(DEPDIR)/libode_a-odemath.Po
include ./$(DEPDIR)/libode_a-plane.Po
include ./$(DEPDIR)/libode_a-quickstep.Po
include ./$(DEPDIR)/libode_a-ray.Po
include ./$(DEPDIR)/libode_a-rotation.Po
include ./$(DEPDIR)/libode_a-sphere.Po
include ./$(DEPDIR)/libode_a-step.Po
include ./$(DEPDIR)/libode_a-stepfast.Po
include ./$(DEPDIR)/libode_a-testing.Po
include ./$(DEPDIR)/libode_a-timer.Po
include ./$(DEPDIR)/libode_a-util.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libfast_a-fastldlt.o: fastldlt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastldlt.o -MD -MP -MF $(DEPDIR)/libfast_a-fastldlt.Tpo -c -o libfast_a-fastldlt.o `test -f 'fastldlt.c' || echo '$(srcdir)/'`fastldlt.c
	mv -f $(DEPDIR)/libfast_a-fastldlt.Tpo $(DEPDIR)/libfast_a-fastldlt.Po
#	source='fastldlt.c' object='libfast_a-fastldlt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastldlt.o `test -f 'fastldlt.c' || echo '$(srcdir)/'`fastldlt.c

libfast_a-fastldlt.obj: fastldlt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastldlt.obj -MD -MP -MF $(DEPDIR)/libfast_a-fastldlt.Tpo -c -o libfast_a-fastldlt.obj `if test -f 'fastldlt.c'; then $(CYGPATH_W) 'fastldlt.c'; else $(CYGPATH_W) '$(srcdir)/fastldlt.c'; fi`
	mv -f $(DEPDIR)/libfast_a-fastldlt.Tpo $(DEPDIR)/libfast_a-fastldlt.Po
#	source='fastldlt.c' object='libfast_a-fastldlt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastldlt.obj `if test -f 'fastldlt.c'; then $(CYGPATH_W) 'fastldlt.c'; else $(CYGPATH_W) '$(srcdir)/fastldlt.c'; fi`

libfast_a-fastltsolve.o: fastltsolve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastltsolve.o -MD -MP -MF $(DEPDIR)/libfast_a-fastltsolve.Tpo -c -o libfast_a-fastltsolve.o `test -f 'fastltsolve.c' || echo '$(srcdir)/'`fastltsolve.c
	mv -f $(DEPDIR)/libfast_a-fastltsolve.Tpo $(DEPDIR)/libfast_a-fastltsolve.Po
#	source='fastltsolve.c' object='libfast_a-fastltsolve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastltsolve.o `test -f 'fastltsolve.c' || echo '$(srcdir)/'`fastltsolve.c

libfast_a-fastltsolve.obj: fastltsolve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastltsolve.obj -MD -MP -MF $(DEPDIR)/libfast_a-fastltsolve.Tpo -c -o libfast_a-fastltsolve.obj `if test -f 'fastltsolve.c'; then $(CYGPATH_W) 'fastltsolve.c'; else $(CYGPATH_W) '$(srcdir)/fastltsolve.c'; fi`
	mv -f $(DEPDIR)/libfast_a-fastltsolve.Tpo $(DEPDIR)/libfast_a-fastltsolve.Po
#	source='fastltsolve.c' object='libfast_a-fastltsolve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastltsolve.obj `if test -f 'fastltsolve.c'; then $(CYGPATH_W) 'fastltsolve.c'; else $(CYGPATH_W) '$(srcdir)/fastltsolve.c'; fi`

libfast_a-fastdot.o: fastdot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastdot.o -MD -MP -MF $(DEPDIR)/libfast_a-fastdot.Tpo -c -o libfast_a-fastdot.o `test -f 'fastdot.c' || echo '$(srcdir)/'`fastdot.c
	mv -f $(DEPDIR)/libfast_a-fastdot.Tpo $(DEPDIR)/libfast_a-fastdot.Po
#	source='fastdot.c' object='libfast_a-fastdot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastdot.o `test -f 'fastdot.c' || echo '$(srcdir)/'`fastdot.c

libfast_a-fastdot.obj: fastdot.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastdot.obj -MD -MP -MF $(DEPDIR)/libfast_a-fastdot.Tpo -c -o libfast_a-fastdot.obj `if test -f 'fastdot.c'; then $(CYGPATH_W) 'fastdot.c'; else $(CYGPATH_W) '$(srcdir)/fastdot.c'; fi`
	mv -f $(DEPDIR)/libfast_a-fastdot.Tpo $(DEPDIR)/libfast_a-fastdot.Po
#	source='fastdot.c' object='libfast_a-fastdot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastdot.obj `if test -f 'fastdot.c'; then $(CYGPATH_W) 'fastdot.c'; else $(CYGPATH_W) '$(srcdir)/fastdot.c'; fi`

libfast_a-fastlsolve.o: fastlsolve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastlsolve.o -MD -MP -MF $(DEPDIR)/libfast_a-fastlsolve.Tpo -c -o libfast_a-fastlsolve.o `test -f 'fastlsolve.c' || echo '$(srcdir)/'`fastlsolve.c
	mv -f $(DEPDIR)/libfast_a-fastlsolve.Tpo $(DEPDIR)/libfast_a-fastlsolve.Po
#	source='fastlsolve.c' object='libfast_a-fastlsolve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastlsolve.o `test -f 'fastlsolve.c' || echo '$(srcdir)/'`fastlsolve.c

libfast_a-fastlsolve.obj: fastlsolve.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -MT libfast_a-fastlsolve.obj -MD -MP -MF $(DEPDIR)/libfast_a-fastlsolve.Tpo -c -o libfast_a-fastlsolve.obj `if test -f 'fastlsolve.c'; then $(CYGPATH_W) 'fastlsolve.c'; else $(CYGPATH_W) '$(srcdir)/fastlsolve.c'; fi`
	mv -f $(DEPDIR)/libfast_a-fastlsolve.Tpo $(DEPDIR)/libfast_a-fastlsolve.Po
#	source='fastlsolve.c' object='libfast_a-fastlsolve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libfast_a_CFLAGS) $(CFLAGS) -c -o libfast_a-fastlsolve.obj `if test -f 'fastlsolve.c'; then $(CYGPATH_W) 'fastlsolve.c'; else $(CYGPATH_W) '$(srcdir)/fastlsolve.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libGIMPACT_a-gim_boxpruning.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_boxpruning.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_boxpruning.Tpo -c -o libGIMPACT_a-gim_boxpruning.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_boxpruning.Tpo $(DEPDIR)/libGIMPACT_a-gim_boxpruning.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp' object='libGIMPACT_a-gim_boxpruning.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_boxpruning.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp

libGIMPACT_a-gim_boxpruning.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_boxpruning.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_boxpruning.Tpo -c -o libGIMPACT_a-gim_boxpruning.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_boxpruning.Tpo $(DEPDIR)/libGIMPACT_a-gim_boxpruning.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp' object='libGIMPACT_a-gim_boxpruning.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_boxpruning.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_boxpruning.cpp'; fi`

libGIMPACT_a-gim_contact.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_contact.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_contact.Tpo -c -o libGIMPACT_a-gim_contact.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_contact.Tpo $(DEPDIR)/libGIMPACT_a-gim_contact.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp' object='libGIMPACT_a-gim_contact.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_contact.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp

libGIMPACT_a-gim_contact.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_contact.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_contact.Tpo -c -o libGIMPACT_a-gim_contact.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_contact.Tpo $(DEPDIR)/libGIMPACT_a-gim_contact.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp' object='libGIMPACT_a-gim_contact.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_contact.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_contact.cpp'; fi`

libGIMPACT_a-gim_math.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_math.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_math.Tpo -c -o libGIMPACT_a-gim_math.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_math.Tpo $(DEPDIR)/libGIMPACT_a-gim_math.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp' object='libGIMPACT_a-gim_math.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_math.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp

libGIMPACT_a-gim_math.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_math.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_math.Tpo -c -o libGIMPACT_a-gim_math.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_math.Tpo $(DEPDIR)/libGIMPACT_a-gim_math.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp' object='libGIMPACT_a-gim_math.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_math.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_math.cpp'; fi`

libGIMPACT_a-gim_memory.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_memory.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_memory.Tpo -c -o libGIMPACT_a-gim_memory.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_memory.Tpo $(DEPDIR)/libGIMPACT_a-gim_memory.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp' object='libGIMPACT_a-gim_memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_memory.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp

libGIMPACT_a-gim_memory.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_memory.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_memory.Tpo -c -o libGIMPACT_a-gim_memory.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_memory.Tpo $(DEPDIR)/libGIMPACT_a-gim_memory.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp' object='libGIMPACT_a-gim_memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_memory.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_memory.cpp'; fi`

libGIMPACT_a-gim_tri_tri_overlap.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_tri_tri_overlap.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Tpo -c -o libGIMPACT_a-gim_tri_tri_overlap.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Tpo $(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp' object='libGIMPACT_a-gim_tri_tri_overlap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_tri_tri_overlap.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp

libGIMPACT_a-gim_tri_tri_overlap.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_tri_tri_overlap.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Tpo -c -o libGIMPACT_a-gim_tri_tri_overlap.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Tpo $(DEPDIR)/libGIMPACT_a-gim_tri_tri_overlap.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp' object='libGIMPACT_a-gim_tri_tri_overlap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_tri_tri_overlap.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_tri_tri_overlap.cpp'; fi`

libGIMPACT_a-gim_trimesh.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh.Tpo -c -o libGIMPACT_a-gim_trimesh.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp' object='libGIMPACT_a-gim_trimesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp

libGIMPACT_a-gim_trimesh.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh.Tpo -c -o libGIMPACT_a-gim_trimesh.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp' object='libGIMPACT_a-gim_trimesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh.cpp'; fi`

libGIMPACT_a-gim_trimesh_capsule_collision.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_capsule_collision.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_capsule_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp' object='libGIMPACT_a-gim_trimesh_capsule_collision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_capsule_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp

libGIMPACT_a-gim_trimesh_capsule_collision.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_capsule_collision.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_capsule_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_capsule_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp' object='libGIMPACT_a-gim_trimesh_capsule_collision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_capsule_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_capsule_collision.cpp'; fi`

libGIMPACT_a-gim_trimesh_ray_collision.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_ray_collision.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_ray_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp' object='libGIMPACT_a-gim_trimesh_ray_collision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_ray_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp

libGIMPACT_a-gim_trimesh_ray_collision.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_ray_collision.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_ray_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_ray_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp' object='libGIMPACT_a-gim_trimesh_ray_collision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_ray_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_ray_collision.cpp'; fi`

libGIMPACT_a-gim_trimesh_sphere_collision.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_sphere_collision.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_sphere_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp' object='libGIMPACT_a-gim_trimesh_sphere_collision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_sphere_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp

libGIMPACT_a-gim_trimesh_sphere_collision.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_sphere_collision.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_sphere_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_sphere_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp' object='libGIMPACT_a-gim_trimesh_sphere_collision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_sphere_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_sphere_collision.cpp'; fi`

libGIMPACT_a-gim_trimesh_trimesh_collision.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_trimesh_collision.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_trimesh_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp' object='libGIMPACT_a-gim_trimesh_trimesh_collision.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_trimesh_collision.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp

libGIMPACT_a-gim_trimesh_trimesh_collision.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gim_trimesh_trimesh_collision.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Tpo -c -o libGIMPACT_a-gim_trimesh_trimesh_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Tpo $(DEPDIR)/libGIMPACT_a-gim_trimesh_trimesh_collision.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp' object='libGIMPACT_a-gim_trimesh_trimesh_collision.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gim_trimesh_trimesh_collision.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gim_trimesh_trimesh_collision.cpp'; fi`

libGIMPACT_a-gimpact.o: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gimpact.o -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gimpact.Tpo -c -o libGIMPACT_a-gimpact.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp
	mv -f $(DEPDIR)/libGIMPACT_a-gimpact.Tpo $(DEPDIR)/libGIMPACT_a-gimpact.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp' object='libGIMPACT_a-gimpact.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gimpact.o `test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp

libGIMPACT_a-gimpact.obj: /home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libGIMPACT_a-gimpact.obj -MD -MP -MF $(DEPDIR)/libGIMPACT_a-gimpact.Tpo -c -o libGIMPACT_a-gimpact.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp'; fi`
	mv -f $(DEPDIR)/libGIMPACT_a-gimpact.Tpo $(DEPDIR)/libGIMPACT_a-gimpact.Po
#	source='/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp' object='libGIMPACT_a-gimpact.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libGIMPACT_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libGIMPACT_a-gimpact.obj `if test -f '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/GIMPACT/src/gimpact.cpp'; fi`

libOPCODE_a-OPC_AABBCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_AABBCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Tpo -c -o libOPCODE_a-OPC_AABBCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp' object='libOPCODE_a-OPC_AABBCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_AABBCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp

libOPCODE_a-OPC_AABBCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_AABBCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Tpo -c -o libOPCODE_a-OPC_AABBCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_AABBCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp' object='libOPCODE_a-OPC_AABBCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_AABBCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBCollider.cpp'; fi`

libOPCODE_a-OPC_AABBTree.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_AABBTree.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_AABBTree.Tpo -c -o libOPCODE_a-OPC_AABBTree.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_AABBTree.Tpo $(DEPDIR)/libOPCODE_a-OPC_AABBTree.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp' object='libOPCODE_a-OPC_AABBTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_AABBTree.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp

libOPCODE_a-OPC_AABBTree.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_AABBTree.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_AABBTree.Tpo -c -o libOPCODE_a-OPC_AABBTree.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_AABBTree.Tpo $(DEPDIR)/libOPCODE_a-OPC_AABBTree.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp' object='libOPCODE_a-OPC_AABBTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_AABBTree.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_AABBTree.cpp'; fi`

libOPCODE_a-OPC_BaseModel.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_BaseModel.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_BaseModel.Tpo -c -o libOPCODE_a-OPC_BaseModel.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_BaseModel.Tpo $(DEPDIR)/libOPCODE_a-OPC_BaseModel.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp' object='libOPCODE_a-OPC_BaseModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_BaseModel.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp

libOPCODE_a-OPC_BaseModel.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_BaseModel.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_BaseModel.Tpo -c -o libOPCODE_a-OPC_BaseModel.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_BaseModel.Tpo $(DEPDIR)/libOPCODE_a-OPC_BaseModel.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp' object='libOPCODE_a-OPC_BaseModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_BaseModel.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_BaseModel.cpp'; fi`

libOPCODE_a-OPC_BoxPruning.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_BoxPruning.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Tpo -c -o libOPCODE_a-OPC_BoxPruning.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Tpo $(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp' object='libOPCODE_a-OPC_BoxPruning.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_BoxPruning.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp

libOPCODE_a-OPC_BoxPruning.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_BoxPruning.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Tpo -c -o libOPCODE_a-OPC_BoxPruning.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Tpo $(DEPDIR)/libOPCODE_a-OPC_BoxPruning.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp' object='libOPCODE_a-OPC_BoxPruning.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_BoxPruning.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_BoxPruning.cpp'; fi`

libOPCODE_a-OPC_Collider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Collider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Collider.Tpo -c -o libOPCODE_a-OPC_Collider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Collider.Tpo $(DEPDIR)/libOPCODE_a-OPC_Collider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp' object='libOPCODE_a-OPC_Collider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Collider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp

libOPCODE_a-OPC_Collider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Collider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Collider.Tpo -c -o libOPCODE_a-OPC_Collider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Collider.Tpo $(DEPDIR)/libOPCODE_a-OPC_Collider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp' object='libOPCODE_a-OPC_Collider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Collider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Collider.cpp'; fi`

libOPCODE_a-OPC_Common.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Common.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Common.Tpo -c -o libOPCODE_a-OPC_Common.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Common.Tpo $(DEPDIR)/libOPCODE_a-OPC_Common.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp' object='libOPCODE_a-OPC_Common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Common.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp

libOPCODE_a-OPC_Common.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Common.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Common.Tpo -c -o libOPCODE_a-OPC_Common.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Common.Tpo $(DEPDIR)/libOPCODE_a-OPC_Common.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp' object='libOPCODE_a-OPC_Common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Common.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Common.cpp'; fi`

libOPCODE_a-OPC_HybridModel.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_HybridModel.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_HybridModel.Tpo -c -o libOPCODE_a-OPC_HybridModel.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_HybridModel.Tpo $(DEPDIR)/libOPCODE_a-OPC_HybridModel.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp' object='libOPCODE_a-OPC_HybridModel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_HybridModel.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp

libOPCODE_a-OPC_HybridModel.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_HybridModel.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_HybridModel.Tpo -c -o libOPCODE_a-OPC_HybridModel.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_HybridModel.Tpo $(DEPDIR)/libOPCODE_a-OPC_HybridModel.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp' object='libOPCODE_a-OPC_HybridModel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_HybridModel.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_HybridModel.cpp'; fi`

libOPCODE_a-OPC_LSSCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_LSSCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Tpo -c -o libOPCODE_a-OPC_LSSCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp' object='libOPCODE_a-OPC_LSSCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_LSSCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp

libOPCODE_a-OPC_LSSCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_LSSCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Tpo -c -o libOPCODE_a-OPC_LSSCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_LSSCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp' object='libOPCODE_a-OPC_LSSCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_LSSCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_LSSCollider.cpp'; fi`

libOPCODE_a-OPC_MeshInterface.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_MeshInterface.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Tpo -c -o libOPCODE_a-OPC_MeshInterface.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Tpo $(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp' object='libOPCODE_a-OPC_MeshInterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_MeshInterface.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp

libOPCODE_a-OPC_MeshInterface.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_MeshInterface.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Tpo -c -o libOPCODE_a-OPC_MeshInterface.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Tpo $(DEPDIR)/libOPCODE_a-OPC_MeshInterface.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp' object='libOPCODE_a-OPC_MeshInterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_MeshInterface.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_MeshInterface.cpp'; fi`

libOPCODE_a-OPC_Model.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Model.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Model.Tpo -c -o libOPCODE_a-OPC_Model.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Model.Tpo $(DEPDIR)/libOPCODE_a-OPC_Model.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp' object='libOPCODE_a-OPC_Model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Model.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp

libOPCODE_a-OPC_Model.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Model.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Model.Tpo -c -o libOPCODE_a-OPC_Model.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Model.Tpo $(DEPDIR)/libOPCODE_a-OPC_Model.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp' object='libOPCODE_a-OPC_Model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Model.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Model.cpp'; fi`

libOPCODE_a-OPC_OBBCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_OBBCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Tpo -c -o libOPCODE_a-OPC_OBBCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp' object='libOPCODE_a-OPC_OBBCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_OBBCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp

libOPCODE_a-OPC_OBBCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_OBBCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Tpo -c -o libOPCODE_a-OPC_OBBCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_OBBCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp' object='libOPCODE_a-OPC_OBBCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_OBBCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_OBBCollider.cpp'; fi`

libOPCODE_a-Opcode.o: /home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-Opcode.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-Opcode.Tpo -c -o libOPCODE_a-Opcode.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp
	mv -f $(DEPDIR)/libOPCODE_a-Opcode.Tpo $(DEPDIR)/libOPCODE_a-Opcode.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp' object='libOPCODE_a-Opcode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-Opcode.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp

libOPCODE_a-Opcode.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-Opcode.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-Opcode.Tpo -c -o libOPCODE_a-Opcode.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-Opcode.Tpo $(DEPDIR)/libOPCODE_a-Opcode.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp' object='libOPCODE_a-Opcode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-Opcode.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Opcode.cpp'; fi`

libOPCODE_a-OPC_OptimizedTree.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_OptimizedTree.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Tpo -c -o libOPCODE_a-OPC_OptimizedTree.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Tpo $(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp' object='libOPCODE_a-OPC_OptimizedTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_OptimizedTree.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp

libOPCODE_a-OPC_OptimizedTree.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_OptimizedTree.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Tpo -c -o libOPCODE_a-OPC_OptimizedTree.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Tpo $(DEPDIR)/libOPCODE_a-OPC_OptimizedTree.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp' object='libOPCODE_a-OPC_OptimizedTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_OptimizedTree.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_OptimizedTree.cpp'; fi`

libOPCODE_a-OPC_Picking.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Picking.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Picking.Tpo -c -o libOPCODE_a-OPC_Picking.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Picking.Tpo $(DEPDIR)/libOPCODE_a-OPC_Picking.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp' object='libOPCODE_a-OPC_Picking.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Picking.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp

libOPCODE_a-OPC_Picking.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_Picking.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_Picking.Tpo -c -o libOPCODE_a-OPC_Picking.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_Picking.Tpo $(DEPDIR)/libOPCODE_a-OPC_Picking.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp' object='libOPCODE_a-OPC_Picking.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_Picking.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_Picking.cpp'; fi`

libOPCODE_a-OPC_PlanesCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_PlanesCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Tpo -c -o libOPCODE_a-OPC_PlanesCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp' object='libOPCODE_a-OPC_PlanesCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_PlanesCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp

libOPCODE_a-OPC_PlanesCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_PlanesCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Tpo -c -o libOPCODE_a-OPC_PlanesCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_PlanesCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp' object='libOPCODE_a-OPC_PlanesCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_PlanesCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_PlanesCollider.cpp'; fi`

libOPCODE_a-OPC_RayCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_RayCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_RayCollider.Tpo -c -o libOPCODE_a-OPC_RayCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_RayCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_RayCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp' object='libOPCODE_a-OPC_RayCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_RayCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp

libOPCODE_a-OPC_RayCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_RayCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_RayCollider.Tpo -c -o libOPCODE_a-OPC_RayCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_RayCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_RayCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp' object='libOPCODE_a-OPC_RayCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_RayCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_RayCollider.cpp'; fi`

libOPCODE_a-OPC_SphereCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_SphereCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Tpo -c -o libOPCODE_a-OPC_SphereCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp' object='libOPCODE_a-OPC_SphereCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_SphereCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp

libOPCODE_a-OPC_SphereCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_SphereCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Tpo -c -o libOPCODE_a-OPC_SphereCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_SphereCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp' object='libOPCODE_a-OPC_SphereCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_SphereCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_SphereCollider.cpp'; fi`

libOPCODE_a-OPC_SweepAndPrune.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_SweepAndPrune.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Tpo -c -o libOPCODE_a-OPC_SweepAndPrune.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Tpo $(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp' object='libOPCODE_a-OPC_SweepAndPrune.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_SweepAndPrune.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp

libOPCODE_a-OPC_SweepAndPrune.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_SweepAndPrune.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Tpo -c -o libOPCODE_a-OPC_SweepAndPrune.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Tpo $(DEPDIR)/libOPCODE_a-OPC_SweepAndPrune.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp' object='libOPCODE_a-OPC_SweepAndPrune.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_SweepAndPrune.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_SweepAndPrune.cpp'; fi`

libOPCODE_a-OPC_TreeBuilders.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_TreeBuilders.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Tpo -c -o libOPCODE_a-OPC_TreeBuilders.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Tpo $(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp' object='libOPCODE_a-OPC_TreeBuilders.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_TreeBuilders.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp

libOPCODE_a-OPC_TreeBuilders.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_TreeBuilders.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Tpo -c -o libOPCODE_a-OPC_TreeBuilders.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Tpo $(DEPDIR)/libOPCODE_a-OPC_TreeBuilders.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp' object='libOPCODE_a-OPC_TreeBuilders.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_TreeBuilders.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeBuilders.cpp'; fi`

libOPCODE_a-OPC_TreeCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_TreeCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Tpo -c -o libOPCODE_a-OPC_TreeCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp' object='libOPCODE_a-OPC_TreeCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_TreeCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp

libOPCODE_a-OPC_TreeCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_TreeCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Tpo -c -o libOPCODE_a-OPC_TreeCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_TreeCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp' object='libOPCODE_a-OPC_TreeCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_TreeCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_TreeCollider.cpp'; fi`

libOPCODE_a-OPC_VolumeCollider.o: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_VolumeCollider.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Tpo -c -o libOPCODE_a-OPC_VolumeCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp
	mv -f $(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp' object='libOPCODE_a-OPC_VolumeCollider.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_VolumeCollider.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp

libOPCODE_a-OPC_VolumeCollider.obj: /home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-OPC_VolumeCollider.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Tpo -c -o libOPCODE_a-OPC_VolumeCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Tpo $(DEPDIR)/libOPCODE_a-OPC_VolumeCollider.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp' object='libOPCODE_a-OPC_VolumeCollider.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-OPC_VolumeCollider.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/OPC_VolumeCollider.cpp'; fi`

libOPCODE_a-IceAABB.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceAABB.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceAABB.Tpo -c -o libOPCODE_a-IceAABB.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceAABB.Tpo $(DEPDIR)/libOPCODE_a-IceAABB.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp' object='libOPCODE_a-IceAABB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceAABB.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp

libOPCODE_a-IceAABB.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceAABB.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceAABB.Tpo -c -o libOPCODE_a-IceAABB.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceAABB.Tpo $(DEPDIR)/libOPCODE_a-IceAABB.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp' object='libOPCODE_a-IceAABB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceAABB.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceAABB.cpp'; fi`

libOPCODE_a-IceContainer.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceContainer.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceContainer.Tpo -c -o libOPCODE_a-IceContainer.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceContainer.Tpo $(DEPDIR)/libOPCODE_a-IceContainer.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp' object='libOPCODE_a-IceContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceContainer.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp

libOPCODE_a-IceContainer.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceContainer.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceContainer.Tpo -c -o libOPCODE_a-IceContainer.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceContainer.Tpo $(DEPDIR)/libOPCODE_a-IceContainer.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp' object='libOPCODE_a-IceContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceContainer.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceContainer.cpp'; fi`

libOPCODE_a-IceHPoint.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceHPoint.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceHPoint.Tpo -c -o libOPCODE_a-IceHPoint.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceHPoint.Tpo $(DEPDIR)/libOPCODE_a-IceHPoint.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp' object='libOPCODE_a-IceHPoint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceHPoint.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp

libOPCODE_a-IceHPoint.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceHPoint.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceHPoint.Tpo -c -o libOPCODE_a-IceHPoint.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceHPoint.Tpo $(DEPDIR)/libOPCODE_a-IceHPoint.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp' object='libOPCODE_a-IceHPoint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceHPoint.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceHPoint.cpp'; fi`

libOPCODE_a-IceIndexedTriangle.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceIndexedTriangle.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Tpo -c -o libOPCODE_a-IceIndexedTriangle.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Tpo $(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp' object='libOPCODE_a-IceIndexedTriangle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceIndexedTriangle.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp

libOPCODE_a-IceIndexedTriangle.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceIndexedTriangle.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Tpo -c -o libOPCODE_a-IceIndexedTriangle.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Tpo $(DEPDIR)/libOPCODE_a-IceIndexedTriangle.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp' object='libOPCODE_a-IceIndexedTriangle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceIndexedTriangle.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceIndexedTriangle.cpp'; fi`

libOPCODE_a-IceMatrix3x3.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceMatrix3x3.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceMatrix3x3.Tpo -c -o libOPCODE_a-IceMatrix3x3.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceMatrix3x3.Tpo $(DEPDIR)/libOPCODE_a-IceMatrix3x3.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp' object='libOPCODE_a-IceMatrix3x3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceMatrix3x3.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp

libOPCODE_a-IceMatrix3x3.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceMatrix3x3.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceMatrix3x3.Tpo -c -o libOPCODE_a-IceMatrix3x3.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceMatrix3x3.Tpo $(DEPDIR)/libOPCODE_a-IceMatrix3x3.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp' object='libOPCODE_a-IceMatrix3x3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceMatrix3x3.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix3x3.cpp'; fi`

libOPCODE_a-IceMatrix4x4.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceMatrix4x4.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceMatrix4x4.Tpo -c -o libOPCODE_a-IceMatrix4x4.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceMatrix4x4.Tpo $(DEPDIR)/libOPCODE_a-IceMatrix4x4.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp' object='libOPCODE_a-IceMatrix4x4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceMatrix4x4.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp

libOPCODE_a-IceMatrix4x4.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceMatrix4x4.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceMatrix4x4.Tpo -c -o libOPCODE_a-IceMatrix4x4.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceMatrix4x4.Tpo $(DEPDIR)/libOPCODE_a-IceMatrix4x4.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp' object='libOPCODE_a-IceMatrix4x4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceMatrix4x4.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceMatrix4x4.cpp'; fi`

libOPCODE_a-IceOBB.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceOBB.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceOBB.Tpo -c -o libOPCODE_a-IceOBB.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceOBB.Tpo $(DEPDIR)/libOPCODE_a-IceOBB.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp' object='libOPCODE_a-IceOBB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceOBB.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp

libOPCODE_a-IceOBB.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceOBB.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceOBB.Tpo -c -o libOPCODE_a-IceOBB.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceOBB.Tpo $(DEPDIR)/libOPCODE_a-IceOBB.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp' object='libOPCODE_a-IceOBB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceOBB.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceOBB.cpp'; fi`

libOPCODE_a-IcePlane.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IcePlane.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IcePlane.Tpo -c -o libOPCODE_a-IcePlane.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IcePlane.Tpo $(DEPDIR)/libOPCODE_a-IcePlane.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp' object='libOPCODE_a-IcePlane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IcePlane.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp

libOPCODE_a-IcePlane.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IcePlane.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IcePlane.Tpo -c -o libOPCODE_a-IcePlane.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IcePlane.Tpo $(DEPDIR)/libOPCODE_a-IcePlane.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp' object='libOPCODE_a-IcePlane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IcePlane.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePlane.cpp'; fi`

libOPCODE_a-IcePoint.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IcePoint.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IcePoint.Tpo -c -o libOPCODE_a-IcePoint.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IcePoint.Tpo $(DEPDIR)/libOPCODE_a-IcePoint.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp' object='libOPCODE_a-IcePoint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IcePoint.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp

libOPCODE_a-IcePoint.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IcePoint.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IcePoint.Tpo -c -o libOPCODE_a-IcePoint.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IcePoint.Tpo $(DEPDIR)/libOPCODE_a-IcePoint.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp' object='libOPCODE_a-IcePoint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IcePoint.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IcePoint.cpp'; fi`

libOPCODE_a-IceRandom.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceRandom.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceRandom.Tpo -c -o libOPCODE_a-IceRandom.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceRandom.Tpo $(DEPDIR)/libOPCODE_a-IceRandom.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp' object='libOPCODE_a-IceRandom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceRandom.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp

libOPCODE_a-IceRandom.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceRandom.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceRandom.Tpo -c -o libOPCODE_a-IceRandom.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceRandom.Tpo $(DEPDIR)/libOPCODE_a-IceRandom.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp' object='libOPCODE_a-IceRandom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceRandom.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRandom.cpp'; fi`

libOPCODE_a-IceRay.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceRay.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceRay.Tpo -c -o libOPCODE_a-IceRay.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceRay.Tpo $(DEPDIR)/libOPCODE_a-IceRay.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp' object='libOPCODE_a-IceRay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceRay.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp

libOPCODE_a-IceRay.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceRay.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceRay.Tpo -c -o libOPCODE_a-IceRay.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceRay.Tpo $(DEPDIR)/libOPCODE_a-IceRay.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp' object='libOPCODE_a-IceRay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceRay.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRay.cpp'; fi`

libOPCODE_a-IceRevisitedRadix.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceRevisitedRadix.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Tpo -c -o libOPCODE_a-IceRevisitedRadix.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Tpo $(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp' object='libOPCODE_a-IceRevisitedRadix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceRevisitedRadix.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp

libOPCODE_a-IceRevisitedRadix.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceRevisitedRadix.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Tpo -c -o libOPCODE_a-IceRevisitedRadix.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Tpo $(DEPDIR)/libOPCODE_a-IceRevisitedRadix.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp' object='libOPCODE_a-IceRevisitedRadix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceRevisitedRadix.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceRevisitedRadix.cpp'; fi`

libOPCODE_a-IceSegment.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceSegment.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceSegment.Tpo -c -o libOPCODE_a-IceSegment.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceSegment.Tpo $(DEPDIR)/libOPCODE_a-IceSegment.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp' object='libOPCODE_a-IceSegment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceSegment.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp

libOPCODE_a-IceSegment.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceSegment.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceSegment.Tpo -c -o libOPCODE_a-IceSegment.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceSegment.Tpo $(DEPDIR)/libOPCODE_a-IceSegment.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp' object='libOPCODE_a-IceSegment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceSegment.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceSegment.cpp'; fi`

libOPCODE_a-IceTriangle.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceTriangle.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceTriangle.Tpo -c -o libOPCODE_a-IceTriangle.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceTriangle.Tpo $(DEPDIR)/libOPCODE_a-IceTriangle.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp' object='libOPCODE_a-IceTriangle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceTriangle.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp

libOPCODE_a-IceTriangle.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceTriangle.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceTriangle.Tpo -c -o libOPCODE_a-IceTriangle.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceTriangle.Tpo $(DEPDIR)/libOPCODE_a-IceTriangle.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp' object='libOPCODE_a-IceTriangle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceTriangle.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceTriangle.cpp'; fi`

libOPCODE_a-IceUtils.o: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceUtils.o -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceUtils.Tpo -c -o libOPCODE_a-IceUtils.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp
	mv -f $(DEPDIR)/libOPCODE_a-IceUtils.Tpo $(DEPDIR)/libOPCODE_a-IceUtils.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp' object='libOPCODE_a-IceUtils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceUtils.o `test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp' || echo '$(srcdir)/'`/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp

libOPCODE_a-IceUtils.obj: /home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libOPCODE_a-IceUtils.obj -MD -MP -MF $(DEPDIR)/libOPCODE_a-IceUtils.Tpo -c -o libOPCODE_a-IceUtils.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp'; fi`
	mv -f $(DEPDIR)/libOPCODE_a-IceUtils.Tpo $(DEPDIR)/libOPCODE_a-IceUtils.Po
#	source='/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp' object='libOPCODE_a-IceUtils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libOPCODE_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libOPCODE_a-IceUtils.obj `if test -f '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp'; then $(CYGPATH_W) '/home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp'; else $(CYGPATH_W) '$(srcdir)//home/mezl/Desktop/ode-0.9/OPCODE/Ice/IceUtils.cpp'; fi`

libode_a-obstack.o: obstack.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-obstack.o -MD -MP -MF $(DEPDIR)/libode_a-obstack.Tpo -c -o libode_a-obstack.o `test -f 'obstack.cpp' || echo '$(srcdir)/'`obstack.cpp
	mv -f $(DEPDIR)/libode_a-obstack.Tpo $(DEPDIR)/libode_a-obstack.Po
#	source='obstack.cpp' object='libode_a-obstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-obstack.o `test -f 'obstack.cpp' || echo '$(srcdir)/'`obstack.cpp

libode_a-obstack.obj: obstack.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-obstack.obj -MD -MP -MF $(DEPDIR)/libode_a-obstack.Tpo -c -o libode_a-obstack.obj `if test -f 'obstack.cpp'; then $(CYGPATH_W) 'obstack.cpp'; else $(CYGPATH_W) '$(srcdir)/obstack.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-obstack.Tpo $(DEPDIR)/libode_a-obstack.Po
#	source='obstack.cpp' object='libode_a-obstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-obstack.obj `if test -f 'obstack.cpp'; then $(CYGPATH_W) 'obstack.cpp'; else $(CYGPATH_W) '$(srcdir)/obstack.cpp'; fi`

libode_a-collision_util.o: collision_util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_util.o -MD -MP -MF $(DEPDIR)/libode_a-collision_util.Tpo -c -o libode_a-collision_util.o `test -f 'collision_util.cpp' || echo '$(srcdir)/'`collision_util.cpp
	mv -f $(DEPDIR)/libode_a-collision_util.Tpo $(DEPDIR)/libode_a-collision_util.Po
#	source='collision_util.cpp' object='libode_a-collision_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_util.o `test -f 'collision_util.cpp' || echo '$(srcdir)/'`collision_util.cpp

libode_a-collision_util.obj: collision_util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_util.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_util.Tpo -c -o libode_a-collision_util.obj `if test -f 'collision_util.cpp'; then $(CYGPATH_W) 'collision_util.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_util.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_util.Tpo $(DEPDIR)/libode_a-collision_util.Po
#	source='collision_util.cpp' object='libode_a-collision_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_util.obj `if test -f 'collision_util.cpp'; then $(CYGPATH_W) 'collision_util.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_util.cpp'; fi`

libode_a-array.o: array.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-array.o -MD -MP -MF $(DEPDIR)/libode_a-array.Tpo -c -o libode_a-array.o `test -f 'array.cpp' || echo '$(srcdir)/'`array.cpp
	mv -f $(DEPDIR)/libode_a-array.Tpo $(DEPDIR)/libode_a-array.Po
#	source='array.cpp' object='libode_a-array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-array.o `test -f 'array.cpp' || echo '$(srcdir)/'`array.cpp

libode_a-array.obj: array.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-array.obj -MD -MP -MF $(DEPDIR)/libode_a-array.Tpo -c -o libode_a-array.obj `if test -f 'array.cpp'; then $(CYGPATH_W) 'array.cpp'; else $(CYGPATH_W) '$(srcdir)/array.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-array.Tpo $(DEPDIR)/libode_a-array.Po
#	source='array.cpp' object='libode_a-array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-array.obj `if test -f 'array.cpp'; then $(CYGPATH_W) 'array.cpp'; else $(CYGPATH_W) '$(srcdir)/array.cpp'; fi`

libode_a-ode.o: ode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-ode.o -MD -MP -MF $(DEPDIR)/libode_a-ode.Tpo -c -o libode_a-ode.o `test -f 'ode.cpp' || echo '$(srcdir)/'`ode.cpp
	mv -f $(DEPDIR)/libode_a-ode.Tpo $(DEPDIR)/libode_a-ode.Po
#	source='ode.cpp' object='libode_a-ode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-ode.o `test -f 'ode.cpp' || echo '$(srcdir)/'`ode.cpp

libode_a-ode.obj: ode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-ode.obj -MD -MP -MF $(DEPDIR)/libode_a-ode.Tpo -c -o libode_a-ode.obj `if test -f 'ode.cpp'; then $(CYGPATH_W) 'ode.cpp'; else $(CYGPATH_W) '$(srcdir)/ode.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-ode.Tpo $(DEPDIR)/libode_a-ode.Po
#	source='ode.cpp' object='libode_a-ode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-ode.obj `if test -f 'ode.cpp'; then $(CYGPATH_W) 'ode.cpp'; else $(CYGPATH_W) '$(srcdir)/ode.cpp'; fi`

libode_a-error.o: error.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-error.o -MD -MP -MF $(DEPDIR)/libode_a-error.Tpo -c -o libode_a-error.o `test -f 'error.cpp' || echo '$(srcdir)/'`error.cpp
	mv -f $(DEPDIR)/libode_a-error.Tpo $(DEPDIR)/libode_a-error.Po
#	source='error.cpp' object='libode_a-error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-error.o `test -f 'error.cpp' || echo '$(srcdir)/'`error.cpp

libode_a-error.obj: error.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-error.obj -MD -MP -MF $(DEPDIR)/libode_a-error.Tpo -c -o libode_a-error.obj `if test -f 'error.cpp'; then $(CYGPATH_W) 'error.cpp'; else $(CYGPATH_W) '$(srcdir)/error.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-error.Tpo $(DEPDIR)/libode_a-error.Po
#	source='error.cpp' object='libode_a-error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-error.obj `if test -f 'error.cpp'; then $(CYGPATH_W) 'error.cpp'; else $(CYGPATH_W) '$(srcdir)/error.cpp'; fi`

libode_a-odemath.o: odemath.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-odemath.o -MD -MP -MF $(DEPDIR)/libode_a-odemath.Tpo -c -o libode_a-odemath.o `test -f 'odemath.cpp' || echo '$(srcdir)/'`odemath.cpp
	mv -f $(DEPDIR)/libode_a-odemath.Tpo $(DEPDIR)/libode_a-odemath.Po
#	source='odemath.cpp' object='libode_a-odemath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-odemath.o `test -f 'odemath.cpp' || echo '$(srcdir)/'`odemath.cpp

libode_a-odemath.obj: odemath.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-odemath.obj -MD -MP -MF $(DEPDIR)/libode_a-odemath.Tpo -c -o libode_a-odemath.obj `if test -f 'odemath.cpp'; then $(CYGPATH_W) 'odemath.cpp'; else $(CYGPATH_W) '$(srcdir)/odemath.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-odemath.Tpo $(DEPDIR)/libode_a-odemath.Po
#	source='odemath.cpp' object='libode_a-odemath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-odemath.obj `if test -f 'odemath.cpp'; then $(CYGPATH_W) 'odemath.cpp'; else $(CYGPATH_W) '$(srcdir)/odemath.cpp'; fi`

libode_a-collision_kernel.o: collision_kernel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_kernel.o -MD -MP -MF $(DEPDIR)/libode_a-collision_kernel.Tpo -c -o libode_a-collision_kernel.o `test -f 'collision_kernel.cpp' || echo '$(srcdir)/'`collision_kernel.cpp
	mv -f $(DEPDIR)/libode_a-collision_kernel.Tpo $(DEPDIR)/libode_a-collision_kernel.Po
#	source='collision_kernel.cpp' object='libode_a-collision_kernel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_kernel.o `test -f 'collision_kernel.cpp' || echo '$(srcdir)/'`collision_kernel.cpp

libode_a-collision_kernel.obj: collision_kernel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_kernel.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_kernel.Tpo -c -o libode_a-collision_kernel.obj `if test -f 'collision_kernel.cpp'; then $(CYGPATH_W) 'collision_kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_kernel.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_kernel.Tpo $(DEPDIR)/libode_a-collision_kernel.Po
#	source='collision_kernel.cpp' object='libode_a-collision_kernel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_kernel.obj `if test -f 'collision_kernel.cpp'; then $(CYGPATH_W) 'collision_kernel.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_kernel.cpp'; fi`

libode_a-export-dif.o: export-dif.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-export-dif.o -MD -MP -MF $(DEPDIR)/libode_a-export-dif.Tpo -c -o libode_a-export-dif.o `test -f 'export-dif.cpp' || echo '$(srcdir)/'`export-dif.cpp
	mv -f $(DEPDIR)/libode_a-export-dif.Tpo $(DEPDIR)/libode_a-export-dif.Po
#	source='export-dif.cpp' object='libode_a-export-dif.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-export-dif.o `test -f 'export-dif.cpp' || echo '$(srcdir)/'`export-dif.cpp

libode_a-export-dif.obj: export-dif.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-export-dif.obj -MD -MP -MF $(DEPDIR)/libode_a-export-dif.Tpo -c -o libode_a-export-dif.obj `if test -f 'export-dif.cpp'; then $(CYGPATH_W) 'export-dif.cpp'; else $(CYGPATH_W) '$(srcdir)/export-dif.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-export-dif.Tpo $(DEPDIR)/libode_a-export-dif.Po
#	source='export-dif.cpp' object='libode_a-export-dif.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-export-dif.obj `if test -f 'export-dif.cpp'; then $(CYGPATH_W) 'export-dif.cpp'; else $(CYGPATH_W) '$(srcdir)/export-dif.cpp'; fi`

libode_a-quickstep.o: quickstep.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-quickstep.o -MD -MP -MF $(DEPDIR)/libode_a-quickstep.Tpo -c -o libode_a-quickstep.o `test -f 'quickstep.cpp' || echo '$(srcdir)/'`quickstep.cpp
	mv -f $(DEPDIR)/libode_a-quickstep.Tpo $(DEPDIR)/libode_a-quickstep.Po
#	source='quickstep.cpp' object='libode_a-quickstep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-quickstep.o `test -f 'quickstep.cpp' || echo '$(srcdir)/'`quickstep.cpp

libode_a-quickstep.obj: quickstep.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-quickstep.obj -MD -MP -MF $(DEPDIR)/libode_a-quickstep.Tpo -c -o libode_a-quickstep.obj `if test -f 'quickstep.cpp'; then $(CYGPATH_W) 'quickstep.cpp'; else $(CYGPATH_W) '$(srcdir)/quickstep.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-quickstep.Tpo $(DEPDIR)/libode_a-quickstep.Po
#	source='quickstep.cpp' object='libode_a-quickstep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-quickstep.obj `if test -f 'quickstep.cpp'; then $(CYGPATH_W) 'quickstep.cpp'; else $(CYGPATH_W) '$(srcdir)/quickstep.cpp'; fi`

libode_a-collision_quadtreespace.o: collision_quadtreespace.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_quadtreespace.o -MD -MP -MF $(DEPDIR)/libode_a-collision_quadtreespace.Tpo -c -o libode_a-collision_quadtreespace.o `test -f 'collision_quadtreespace.cpp' || echo '$(srcdir)/'`collision_quadtreespace.cpp
	mv -f $(DEPDIR)/libode_a-collision_quadtreespace.Tpo $(DEPDIR)/libode_a-collision_quadtreespace.Po
#	source='collision_quadtreespace.cpp' object='libode_a-collision_quadtreespace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_quadtreespace.o `test -f 'collision_quadtreespace.cpp' || echo '$(srcdir)/'`collision_quadtreespace.cpp

libode_a-collision_quadtreespace.obj: collision_quadtreespace.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_quadtreespace.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_quadtreespace.Tpo -c -o libode_a-collision_quadtreespace.obj `if test -f 'collision_quadtreespace.cpp'; then $(CYGPATH_W) 'collision_quadtreespace.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_quadtreespace.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_quadtreespace.Tpo $(DEPDIR)/libode_a-collision_quadtreespace.Po
#	source='collision_quadtreespace.cpp' object='libode_a-collision_quadtreespace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_quadtreespace.obj `if test -f 'collision_quadtreespace.cpp'; then $(CYGPATH_W) 'collision_quadtreespace.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_quadtreespace.cpp'; fi`

libode_a-rotation.o: rotation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-rotation.o -MD -MP -MF $(DEPDIR)/libode_a-rotation.Tpo -c -o libode_a-rotation.o `test -f 'rotation.cpp' || echo '$(srcdir)/'`rotation.cpp
	mv -f $(DEPDIR)/libode_a-rotation.Tpo $(DEPDIR)/libode_a-rotation.Po
#	source='rotation.cpp' object='libode_a-rotation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-rotation.o `test -f 'rotation.cpp' || echo '$(srcdir)/'`rotation.cpp

libode_a-rotation.obj: rotation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-rotation.obj -MD -MP -MF $(DEPDIR)/libode_a-rotation.Tpo -c -o libode_a-rotation.obj `if test -f 'rotation.cpp'; then $(CYGPATH_W) 'rotation.cpp'; else $(CYGPATH_W) '$(srcdir)/rotation.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-rotation.Tpo $(DEPDIR)/libode_a-rotation.Po
#	source='rotation.cpp' object='libode_a-rotation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-rotation.obj `if test -f 'rotation.cpp'; then $(CYGPATH_W) 'rotation.cpp'; else $(CYGPATH_W) '$(srcdir)/rotation.cpp'; fi`

libode_a-collision_space.o: collision_space.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_space.o -MD -MP -MF $(DEPDIR)/libode_a-collision_space.Tpo -c -o libode_a-collision_space.o `test -f 'collision_space.cpp' || echo '$(srcdir)/'`collision_space.cpp
	mv -f $(DEPDIR)/libode_a-collision_space.Tpo $(DEPDIR)/libode_a-collision_space.Po
#	source='collision_space.cpp' object='libode_a-collision_space.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_space.o `test -f 'collision_space.cpp' || echo '$(srcdir)/'`collision_space.cpp

libode_a-collision_space.obj: collision_space.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_space.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_space.Tpo -c -o libode_a-collision_space.obj `if test -f 'collision_space.cpp'; then $(CYGPATH_W) 'collision_space.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_space.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_space.Tpo $(DEPDIR)/libode_a-collision_space.Po
#	source='collision_space.cpp' object='libode_a-collision_space.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_space.obj `if test -f 'collision_space.cpp'; then $(CYGPATH_W) 'collision_space.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_space.cpp'; fi`

libode_a-collision_cylinder_box.o: collision_cylinder_box.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_box.o -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_box.Tpo -c -o libode_a-collision_cylinder_box.o `test -f 'collision_cylinder_box.cpp' || echo '$(srcdir)/'`collision_cylinder_box.cpp
	mv -f $(DEPDIR)/libode_a-collision_cylinder_box.Tpo $(DEPDIR)/libode_a-collision_cylinder_box.Po
#	source='collision_cylinder_box.cpp' object='libode_a-collision_cylinder_box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_box.o `test -f 'collision_cylinder_box.cpp' || echo '$(srcdir)/'`collision_cylinder_box.cpp

libode_a-collision_cylinder_box.obj: collision_cylinder_box.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_box.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_box.Tpo -c -o libode_a-collision_cylinder_box.obj `if test -f 'collision_cylinder_box.cpp'; then $(CYGPATH_W) 'collision_cylinder_box.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_box.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_cylinder_box.Tpo $(DEPDIR)/libode_a-collision_cylinder_box.Po
#	source='collision_cylinder_box.cpp' object='libode_a-collision_cylinder_box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_box.obj `if test -f 'collision_cylinder_box.cpp'; then $(CYGPATH_W) 'collision_cylinder_box.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_box.cpp'; fi`

libode_a-collision_cylinder_sphere.o: collision_cylinder_sphere.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_sphere.o -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_sphere.Tpo -c -o libode_a-collision_cylinder_sphere.o `test -f 'collision_cylinder_sphere.cpp' || echo '$(srcdir)/'`collision_cylinder_sphere.cpp
	mv -f $(DEPDIR)/libode_a-collision_cylinder_sphere.Tpo $(DEPDIR)/libode_a-collision_cylinder_sphere.Po
#	source='collision_cylinder_sphere.cpp' object='libode_a-collision_cylinder_sphere.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_sphere.o `test -f 'collision_cylinder_sphere.cpp' || echo '$(srcdir)/'`collision_cylinder_sphere.cpp

libode_a-collision_cylinder_sphere.obj: collision_cylinder_sphere.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_sphere.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_sphere.Tpo -c -o libode_a-collision_cylinder_sphere.obj `if test -f 'collision_cylinder_sphere.cpp'; then $(CYGPATH_W) 'collision_cylinder_sphere.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_sphere.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_cylinder_sphere.Tpo $(DEPDIR)/libode_a-collision_cylinder_sphere.Po
#	source='collision_cylinder_sphere.cpp' object='libode_a-collision_cylinder_sphere.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_sphere.obj `if test -f 'collision_cylinder_sphere.cpp'; then $(CYGPATH_W) 'collision_cylinder_sphere.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_sphere.cpp'; fi`

libode_a-collision_cylinder_plane.o: collision_cylinder_plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_plane.o -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_plane.Tpo -c -o libode_a-collision_cylinder_plane.o `test -f 'collision_cylinder_plane.cpp' || echo '$(srcdir)/'`collision_cylinder_plane.cpp
	mv -f $(DEPDIR)/libode_a-collision_cylinder_plane.Tpo $(DEPDIR)/libode_a-collision_cylinder_plane.Po
#	source='collision_cylinder_plane.cpp' object='libode_a-collision_cylinder_plane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_plane.o `test -f 'collision_cylinder_plane.cpp' || echo '$(srcdir)/'`collision_cylinder_plane.cpp

libode_a-collision_cylinder_plane.obj: collision_cylinder_plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_plane.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_plane.Tpo -c -o libode_a-collision_cylinder_plane.obj `if test -f 'collision_cylinder_plane.cpp'; then $(CYGPATH_W) 'collision_cylinder_plane.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_plane.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_cylinder_plane.Tpo $(DEPDIR)/libode_a-collision_cylinder_plane.Po
#	source='collision_cylinder_plane.cpp' object='libode_a-collision_cylinder_plane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_plane.obj `if test -f 'collision_cylinder_plane.cpp'; then $(CYGPATH_W) 'collision_cylinder_plane.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_plane.cpp'; fi`

libode_a-sphere.o: sphere.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-sphere.o -MD -MP -MF $(DEPDIR)/libode_a-sphere.Tpo -c -o libode_a-sphere.o `test -f 'sphere.cpp' || echo '$(srcdir)/'`sphere.cpp
	mv -f $(DEPDIR)/libode_a-sphere.Tpo $(DEPDIR)/libode_a-sphere.Po
#	source='sphere.cpp' object='libode_a-sphere.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-sphere.o `test -f 'sphere.cpp' || echo '$(srcdir)/'`sphere.cpp

libode_a-sphere.obj: sphere.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-sphere.obj -MD -MP -MF $(DEPDIR)/libode_a-sphere.Tpo -c -o libode_a-sphere.obj `if test -f 'sphere.cpp'; then $(CYGPATH_W) 'sphere.cpp'; else $(CYGPATH_W) '$(srcdir)/sphere.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-sphere.Tpo $(DEPDIR)/libode_a-sphere.Po
#	source='sphere.cpp' object='libode_a-sphere.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-sphere.obj `if test -f 'sphere.cpp'; then $(CYGPATH_W) 'sphere.cpp'; else $(CYGPATH_W) '$(srcdir)/sphere.cpp'; fi`

libode_a-box.o: box.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-box.o -MD -MP -MF $(DEPDIR)/libode_a-box.Tpo -c -o libode_a-box.o `test -f 'box.cpp' || echo '$(srcdir)/'`box.cpp
	mv -f $(DEPDIR)/libode_a-box.Tpo $(DEPDIR)/libode_a-box.Po
#	source='box.cpp' object='libode_a-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-box.o `test -f 'box.cpp' || echo '$(srcdir)/'`box.cpp

libode_a-box.obj: box.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-box.obj -MD -MP -MF $(DEPDIR)/libode_a-box.Tpo -c -o libode_a-box.obj `if test -f 'box.cpp'; then $(CYGPATH_W) 'box.cpp'; else $(CYGPATH_W) '$(srcdir)/box.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-box.Tpo $(DEPDIR)/libode_a-box.Po
#	source='box.cpp' object='libode_a-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-box.obj `if test -f 'box.cpp'; then $(CYGPATH_W) 'box.cpp'; else $(CYGPATH_W) '$(srcdir)/box.cpp'; fi`

libode_a-capsule.o: capsule.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-capsule.o -MD -MP -MF $(DEPDIR)/libode_a-capsule.Tpo -c -o libode_a-capsule.o `test -f 'capsule.cpp' || echo '$(srcdir)/'`capsule.cpp
	mv -f $(DEPDIR)/libode_a-capsule.Tpo $(DEPDIR)/libode_a-capsule.Po
#	source='capsule.cpp' object='libode_a-capsule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-capsule.o `test -f 'capsule.cpp' || echo '$(srcdir)/'`capsule.cpp

libode_a-capsule.obj: capsule.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-capsule.obj -MD -MP -MF $(DEPDIR)/libode_a-capsule.Tpo -c -o libode_a-capsule.obj `if test -f 'capsule.cpp'; then $(CYGPATH_W) 'capsule.cpp'; else $(CYGPATH_W) '$(srcdir)/capsule.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-capsule.Tpo $(DEPDIR)/libode_a-capsule.Po
#	source='capsule.cpp' object='libode_a-capsule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-capsule.obj `if test -f 'capsule.cpp'; then $(CYGPATH_W) 'capsule.cpp'; else $(CYGPATH_W) '$(srcdir)/capsule.cpp'; fi`

libode_a-plane.o: plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-plane.o -MD -MP -MF $(DEPDIR)/libode_a-plane.Tpo -c -o libode_a-plane.o `test -f 'plane.cpp' || echo '$(srcdir)/'`plane.cpp
	mv -f $(DEPDIR)/libode_a-plane.Tpo $(DEPDIR)/libode_a-plane.Po
#	source='plane.cpp' object='libode_a-plane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-plane.o `test -f 'plane.cpp' || echo '$(srcdir)/'`plane.cpp

libode_a-plane.obj: plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-plane.obj -MD -MP -MF $(DEPDIR)/libode_a-plane.Tpo -c -o libode_a-plane.obj `if test -f 'plane.cpp'; then $(CYGPATH_W) 'plane.cpp'; else $(CYGPATH_W) '$(srcdir)/plane.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-plane.Tpo $(DEPDIR)/libode_a-plane.Po
#	source='plane.cpp' object='libode_a-plane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-plane.obj `if test -f 'plane.cpp'; then $(CYGPATH_W) 'plane.cpp'; else $(CYGPATH_W) '$(srcdir)/plane.cpp'; fi`

libode_a-ray.o: ray.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-ray.o -MD -MP -MF $(DEPDIR)/libode_a-ray.Tpo -c -o libode_a-ray.o `test -f 'ray.cpp' || echo '$(srcdir)/'`ray.cpp
	mv -f $(DEPDIR)/libode_a-ray.Tpo $(DEPDIR)/libode_a-ray.Po
#	source='ray.cpp' object='libode_a-ray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-ray.o `test -f 'ray.cpp' || echo '$(srcdir)/'`ray.cpp

libode_a-ray.obj: ray.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-ray.obj -MD -MP -MF $(DEPDIR)/libode_a-ray.Tpo -c -o libode_a-ray.obj `if test -f 'ray.cpp'; then $(CYGPATH_W) 'ray.cpp'; else $(CYGPATH_W) '$(srcdir)/ray.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-ray.Tpo $(DEPDIR)/libode_a-ray.Po
#	source='ray.cpp' object='libode_a-ray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-ray.obj `if test -f 'ray.cpp'; then $(CYGPATH_W) 'ray.cpp'; else $(CYGPATH_W) '$(srcdir)/ray.cpp'; fi`

libode_a-cylinder.o: cylinder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-cylinder.o -MD -MP -MF $(DEPDIR)/libode_a-cylinder.Tpo -c -o libode_a-cylinder.o `test -f 'cylinder.cpp' || echo '$(srcdir)/'`cylinder.cpp
	mv -f $(DEPDIR)/libode_a-cylinder.Tpo $(DEPDIR)/libode_a-cylinder.Po
#	source='cylinder.cpp' object='libode_a-cylinder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-cylinder.o `test -f 'cylinder.cpp' || echo '$(srcdir)/'`cylinder.cpp

libode_a-cylinder.obj: cylinder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-cylinder.obj -MD -MP -MF $(DEPDIR)/libode_a-cylinder.Tpo -c -o libode_a-cylinder.obj `if test -f 'cylinder.cpp'; then $(CYGPATH_W) 'cylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/cylinder.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-cylinder.Tpo $(DEPDIR)/libode_a-cylinder.Po
#	source='cylinder.cpp' object='libode_a-cylinder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-cylinder.obj `if test -f 'cylinder.cpp'; then $(CYGPATH_W) 'cylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/cylinder.cpp'; fi`

libode_a-convex.o: convex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-convex.o -MD -MP -MF $(DEPDIR)/libode_a-convex.Tpo -c -o libode_a-convex.o `test -f 'convex.cpp' || echo '$(srcdir)/'`convex.cpp
	mv -f $(DEPDIR)/libode_a-convex.Tpo $(DEPDIR)/libode_a-convex.Po
#	source='convex.cpp' object='libode_a-convex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-convex.o `test -f 'convex.cpp' || echo '$(srcdir)/'`convex.cpp

libode_a-convex.obj: convex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-convex.obj -MD -MP -MF $(DEPDIR)/libode_a-convex.Tpo -c -o libode_a-convex.obj `if test -f 'convex.cpp'; then $(CYGPATH_W) 'convex.cpp'; else $(CYGPATH_W) '$(srcdir)/convex.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-convex.Tpo $(DEPDIR)/libode_a-convex.Po
#	source='convex.cpp' object='libode_a-convex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-convex.obj `if test -f 'convex.cpp'; then $(CYGPATH_W) 'convex.cpp'; else $(CYGPATH_W) '$(srcdir)/convex.cpp'; fi`

libode_a-joint.o: joint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-joint.o -MD -MP -MF $(DEPDIR)/libode_a-joint.Tpo -c -o libode_a-joint.o `test -f 'joint.cpp' || echo '$(srcdir)/'`joint.cpp
	mv -f $(DEPDIR)/libode_a-joint.Tpo $(DEPDIR)/libode_a-joint.Po
#	source='joint.cpp' object='libode_a-joint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-joint.o `test -f 'joint.cpp' || echo '$(srcdir)/'`joint.cpp

libode_a-joint.obj: joint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-joint.obj -MD -MP -MF $(DEPDIR)/libode_a-joint.Tpo -c -o libode_a-joint.obj `if test -f 'joint.cpp'; then $(CYGPATH_W) 'joint.cpp'; else $(CYGPATH_W) '$(srcdir)/joint.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-joint.Tpo $(DEPDIR)/libode_a-joint.Po
#	source='joint.cpp' object='libode_a-joint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-joint.obj `if test -f 'joint.cpp'; then $(CYGPATH_W) 'joint.cpp'; else $(CYGPATH_W) '$(srcdir)/joint.cpp'; fi`

libode_a-step.o: step.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-step.o -MD -MP -MF $(DEPDIR)/libode_a-step.Tpo -c -o libode_a-step.o `test -f 'step.cpp' || echo '$(srcdir)/'`step.cpp
	mv -f $(DEPDIR)/libode_a-step.Tpo $(DEPDIR)/libode_a-step.Po
#	source='step.cpp' object='libode_a-step.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-step.o `test -f 'step.cpp' || echo '$(srcdir)/'`step.cpp

libode_a-step.obj: step.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-step.obj -MD -MP -MF $(DEPDIR)/libode_a-step.Tpo -c -o libode_a-step.obj `if test -f 'step.cpp'; then $(CYGPATH_W) 'step.cpp'; else $(CYGPATH_W) '$(srcdir)/step.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-step.Tpo $(DEPDIR)/libode_a-step.Po
#	source='step.cpp' object='libode_a-step.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-step.obj `if test -f 'step.cpp'; then $(CYGPATH_W) 'step.cpp'; else $(CYGPATH_W) '$(srcdir)/step.cpp'; fi`

libode_a-collision_transform.o: collision_transform.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_transform.o -MD -MP -MF $(DEPDIR)/libode_a-collision_transform.Tpo -c -o libode_a-collision_transform.o `test -f 'collision_transform.cpp' || echo '$(srcdir)/'`collision_transform.cpp
	mv -f $(DEPDIR)/libode_a-collision_transform.Tpo $(DEPDIR)/libode_a-collision_transform.Po
#	source='collision_transform.cpp' object='libode_a-collision_transform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_transform.o `test -f 'collision_transform.cpp' || echo '$(srcdir)/'`collision_transform.cpp

libode_a-collision_transform.obj: collision_transform.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_transform.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_transform.Tpo -c -o libode_a-collision_transform.obj `if test -f 'collision_transform.cpp'; then $(CYGPATH_W) 'collision_transform.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_transform.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_transform.Tpo $(DEPDIR)/libode_a-collision_transform.Po
#	source='collision_transform.cpp' object='libode_a-collision_transform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_transform.obj `if test -f 'collision_transform.cpp'; then $(CYGPATH_W) 'collision_transform.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_transform.cpp'; fi`

libode_a-lcp.o: lcp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-lcp.o -MD -MP -MF $(DEPDIR)/libode_a-lcp.Tpo -c -o libode_a-lcp.o `test -f 'lcp.cpp' || echo '$(srcdir)/'`lcp.cpp
	mv -f $(DEPDIR)/libode_a-lcp.Tpo $(DEPDIR)/libode_a-lcp.Po
#	source='lcp.cpp' object='libode_a-lcp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-lcp.o `test -f 'lcp.cpp' || echo '$(srcdir)/'`lcp.cpp

libode_a-lcp.obj: lcp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-lcp.obj -MD -MP -MF $(DEPDIR)/libode_a-lcp.Tpo -c -o libode_a-lcp.obj `if test -f 'lcp.cpp'; then $(CYGPATH_W) 'lcp.cpp'; else $(CYGPATH_W) '$(srcdir)/lcp.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-lcp.Tpo $(DEPDIR)/libode_a-lcp.Po
#	source='lcp.cpp' object='libode_a-lcp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-lcp.obj `if test -f 'lcp.cpp'; then $(CYGPATH_W) 'lcp.cpp'; else $(CYGPATH_W) '$(srcdir)/lcp.cpp'; fi`

libode_a-stepfast.o: stepfast.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-stepfast.o -MD -MP -MF $(DEPDIR)/libode_a-stepfast.Tpo -c -o libode_a-stepfast.o `test -f 'stepfast.cpp' || echo '$(srcdir)/'`stepfast.cpp
	mv -f $(DEPDIR)/libode_a-stepfast.Tpo $(DEPDIR)/libode_a-stepfast.Po
#	source='stepfast.cpp' object='libode_a-stepfast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-stepfast.o `test -f 'stepfast.cpp' || echo '$(srcdir)/'`stepfast.cpp

libode_a-stepfast.obj: stepfast.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-stepfast.obj -MD -MP -MF $(DEPDIR)/libode_a-stepfast.Tpo -c -o libode_a-stepfast.obj `if test -f 'stepfast.cpp'; then $(CYGPATH_W) 'stepfast.cpp'; else $(CYGPATH_W) '$(srcdir)/stepfast.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-stepfast.Tpo $(DEPDIR)/libode_a-stepfast.Po
#	source='stepfast.cpp' object='libode_a-stepfast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-stepfast.obj `if test -f 'stepfast.cpp'; then $(CYGPATH_W) 'stepfast.cpp'; else $(CYGPATH_W) '$(srcdir)/stepfast.cpp'; fi`

libode_a-mass.o: mass.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-mass.o -MD -MP -MF $(DEPDIR)/libode_a-mass.Tpo -c -o libode_a-mass.o `test -f 'mass.cpp' || echo '$(srcdir)/'`mass.cpp
	mv -f $(DEPDIR)/libode_a-mass.Tpo $(DEPDIR)/libode_a-mass.Po
#	source='mass.cpp' object='libode_a-mass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-mass.o `test -f 'mass.cpp' || echo '$(srcdir)/'`mass.cpp

libode_a-mass.obj: mass.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-mass.obj -MD -MP -MF $(DEPDIR)/libode_a-mass.Tpo -c -o libode_a-mass.obj `if test -f 'mass.cpp'; then $(CYGPATH_W) 'mass.cpp'; else $(CYGPATH_W) '$(srcdir)/mass.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-mass.Tpo $(DEPDIR)/libode_a-mass.Po
#	source='mass.cpp' object='libode_a-mass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-mass.obj `if test -f 'mass.cpp'; then $(CYGPATH_W) 'mass.cpp'; else $(CYGPATH_W) '$(srcdir)/mass.cpp'; fi`

libode_a-testing.o: testing.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-testing.o -MD -MP -MF $(DEPDIR)/libode_a-testing.Tpo -c -o libode_a-testing.o `test -f 'testing.cpp' || echo '$(srcdir)/'`testing.cpp
	mv -f $(DEPDIR)/libode_a-testing.Tpo $(DEPDIR)/libode_a-testing.Po
#	source='testing.cpp' object='libode_a-testing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-testing.o `test -f 'testing.cpp' || echo '$(srcdir)/'`testing.cpp

libode_a-testing.obj: testing.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-testing.obj -MD -MP -MF $(DEPDIR)/libode_a-testing.Tpo -c -o libode_a-testing.obj `if test -f 'testing.cpp'; then $(CYGPATH_W) 'testing.cpp'; else $(CYGPATH_W) '$(srcdir)/testing.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-testing.Tpo $(DEPDIR)/libode_a-testing.Po
#	source='testing.cpp' object='libode_a-testing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-testing.obj `if test -f 'testing.cpp'; then $(CYGPATH_W) 'testing.cpp'; else $(CYGPATH_W) '$(srcdir)/testing.cpp'; fi`

libode_a-mat.o: mat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-mat.o -MD -MP -MF $(DEPDIR)/libode_a-mat.Tpo -c -o libode_a-mat.o `test -f 'mat.cpp' || echo '$(srcdir)/'`mat.cpp
	mv -f $(DEPDIR)/libode_a-mat.Tpo $(DEPDIR)/libode_a-mat.Po
#	source='mat.cpp' object='libode_a-mat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-mat.o `test -f 'mat.cpp' || echo '$(srcdir)/'`mat.cpp

libode_a-mat.obj: mat.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-mat.obj -MD -MP -MF $(DEPDIR)/libode_a-mat.Tpo -c -o libode_a-mat.obj `if test -f 'mat.cpp'; then $(CYGPATH_W) 'mat.cpp'; else $(CYGPATH_W) '$(srcdir)/mat.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-mat.Tpo $(DEPDIR)/libode_a-mat.Po
#	source='mat.cpp' object='libode_a-mat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-mat.obj `if test -f 'mat.cpp'; then $(CYGPATH_W) 'mat.cpp'; else $(CYGPATH_W) '$(srcdir)/mat.cpp'; fi`

libode_a-timer.o: timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-timer.o -MD -MP -MF $(DEPDIR)/libode_a-timer.Tpo -c -o libode_a-timer.o `test -f 'timer.cpp' || echo '$(srcdir)/'`timer.cpp
	mv -f $(DEPDIR)/libode_a-timer.Tpo $(DEPDIR)/libode_a-timer.Po
#	source='timer.cpp' object='libode_a-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-timer.o `test -f 'timer.cpp' || echo '$(srcdir)/'`timer.cpp

libode_a-timer.obj: timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-timer.obj -MD -MP -MF $(DEPDIR)/libode_a-timer.Tpo -c -o libode_a-timer.obj `if test -f 'timer.cpp'; then $(CYGPATH_W) 'timer.cpp'; else $(CYGPATH_W) '$(srcdir)/timer.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-timer.Tpo $(DEPDIR)/libode_a-timer.Po
#	source='timer.cpp' object='libode_a-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-timer.obj `if test -f 'timer.cpp'; then $(CYGPATH_W) 'timer.cpp'; else $(CYGPATH_W) '$(srcdir)/timer.cpp'; fi`

libode_a-matrix.o: matrix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-matrix.o -MD -MP -MF $(DEPDIR)/libode_a-matrix.Tpo -c -o libode_a-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp
	mv -f $(DEPDIR)/libode_a-matrix.Tpo $(DEPDIR)/libode_a-matrix.Po
#	source='matrix.cpp' object='libode_a-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-matrix.o `test -f 'matrix.cpp' || echo '$(srcdir)/'`matrix.cpp

libode_a-matrix.obj: matrix.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-matrix.obj -MD -MP -MF $(DEPDIR)/libode_a-matrix.Tpo -c -o libode_a-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-matrix.Tpo $(DEPDIR)/libode_a-matrix.Po
#	source='matrix.cpp' object='libode_a-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-matrix.obj `if test -f 'matrix.cpp'; then $(CYGPATH_W) 'matrix.cpp'; else $(CYGPATH_W) '$(srcdir)/matrix.cpp'; fi`

libode_a-util.o: util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-util.o -MD -MP -MF $(DEPDIR)/libode_a-util.Tpo -c -o libode_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	mv -f $(DEPDIR)/libode_a-util.Tpo $(DEPDIR)/libode_a-util.Po
#	source='util.cpp' object='libode_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

libode_a-util.obj: util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-util.obj -MD -MP -MF $(DEPDIR)/libode_a-util.Tpo -c -o libode_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-util.Tpo $(DEPDIR)/libode_a-util.Po
#	source='util.cpp' object='libode_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

libode_a-memory.o: memory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-memory.o -MD -MP -MF $(DEPDIR)/libode_a-memory.Tpo -c -o libode_a-memory.o `test -f 'memory.cpp' || echo '$(srcdir)/'`memory.cpp
	mv -f $(DEPDIR)/libode_a-memory.Tpo $(DEPDIR)/libode_a-memory.Po
#	source='memory.cpp' object='libode_a-memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-memory.o `test -f 'memory.cpp' || echo '$(srcdir)/'`memory.cpp

libode_a-memory.obj: memory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-memory.obj -MD -MP -MF $(DEPDIR)/libode_a-memory.Tpo -c -o libode_a-memory.obj `if test -f 'memory.cpp'; then $(CYGPATH_W) 'memory.cpp'; else $(CYGPATH_W) '$(srcdir)/memory.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-memory.Tpo $(DEPDIR)/libode_a-memory.Po
#	source='memory.cpp' object='libode_a-memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-memory.obj `if test -f 'memory.cpp'; then $(CYGPATH_W) 'memory.cpp'; else $(CYGPATH_W) '$(srcdir)/memory.cpp'; fi`

libode_a-misc.o: misc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-misc.o -MD -MP -MF $(DEPDIR)/libode_a-misc.Tpo -c -o libode_a-misc.o `test -f 'misc.cpp' || echo '$(srcdir)/'`misc.cpp
	mv -f $(DEPDIR)/libode_a-misc.Tpo $(DEPDIR)/libode_a-misc.Po
#	source='misc.cpp' object='libode_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-misc.o `test -f 'misc.cpp' || echo '$(srcdir)/'`misc.cpp

libode_a-misc.obj: misc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-misc.obj -MD -MP -MF $(DEPDIR)/libode_a-misc.Tpo -c -o libode_a-misc.obj `if test -f 'misc.cpp'; then $(CYGPATH_W) 'misc.cpp'; else $(CYGPATH_W) '$(srcdir)/misc.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-misc.Tpo $(DEPDIR)/libode_a-misc.Po
#	source='misc.cpp' object='libode_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-misc.obj `if test -f 'misc.cpp'; then $(CYGPATH_W) 'misc.cpp'; else $(CYGPATH_W) '$(srcdir)/misc.cpp'; fi`

libode_a-heightfield.o: heightfield.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-heightfield.o -MD -MP -MF $(DEPDIR)/libode_a-heightfield.Tpo -c -o libode_a-heightfield.o `test -f 'heightfield.cpp' || echo '$(srcdir)/'`heightfield.cpp
	mv -f $(DEPDIR)/libode_a-heightfield.Tpo $(DEPDIR)/libode_a-heightfield.Po
#	source='heightfield.cpp' object='libode_a-heightfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-heightfield.o `test -f 'heightfield.cpp' || echo '$(srcdir)/'`heightfield.cpp

libode_a-heightfield.obj: heightfield.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-heightfield.obj -MD -MP -MF $(DEPDIR)/libode_a-heightfield.Tpo -c -o libode_a-heightfield.obj `if test -f 'heightfield.cpp'; then $(CYGPATH_W) 'heightfield.cpp'; else $(CYGPATH_W) '$(srcdir)/heightfield.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-heightfield.Tpo $(DEPDIR)/libode_a-heightfield.Po
#	source='heightfield.cpp' object='libode_a-heightfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-heightfield.obj `if test -f 'heightfield.cpp'; then $(CYGPATH_W) 'heightfield.cpp'; else $(CYGPATH_W) '$(srcdir)/heightfield.cpp'; fi`

libode_a-collision_trimesh_gimpact.o: collision_trimesh_gimpact.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_gimpact.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_gimpact.Tpo -c -o libode_a-collision_trimesh_gimpact.o `test -f 'collision_trimesh_gimpact.cpp' || echo '$(srcdir)/'`collision_trimesh_gimpact.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_gimpact.Tpo $(DEPDIR)/libode_a-collision_trimesh_gimpact.Po
#	source='collision_trimesh_gimpact.cpp' object='libode_a-collision_trimesh_gimpact.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_gimpact.o `test -f 'collision_trimesh_gimpact.cpp' || echo '$(srcdir)/'`collision_trimesh_gimpact.cpp

libode_a-collision_trimesh_gimpact.obj: collision_trimesh_gimpact.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_gimpact.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_gimpact.Tpo -c -o libode_a-collision_trimesh_gimpact.obj `if test -f 'collision_trimesh_gimpact.cpp'; then $(CYGPATH_W) 'collision_trimesh_gimpact.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_gimpact.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_gimpact.Tpo $(DEPDIR)/libode_a-collision_trimesh_gimpact.Po
#	source='collision_trimesh_gimpact.cpp' object='libode_a-collision_trimesh_gimpact.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_gimpact.obj `if test -f 'collision_trimesh_gimpact.cpp'; then $(CYGPATH_W) 'collision_trimesh_gimpact.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_gimpact.cpp'; fi`

libode_a-collision_trimesh_trimesh.o: collision_trimesh_trimesh.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_trimesh.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_trimesh.Tpo -c -o libode_a-collision_trimesh_trimesh.o `test -f 'collision_trimesh_trimesh.cpp' || echo '$(srcdir)/'`collision_trimesh_trimesh.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_trimesh.Tpo $(DEPDIR)/libode_a-collision_trimesh_trimesh.Po
#	source='collision_trimesh_trimesh.cpp' object='libode_a-collision_trimesh_trimesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_trimesh.o `test -f 'collision_trimesh_trimesh.cpp' || echo '$(srcdir)/'`collision_trimesh_trimesh.cpp

libode_a-collision_trimesh_trimesh.obj: collision_trimesh_trimesh.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_trimesh.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_trimesh.Tpo -c -o libode_a-collision_trimesh_trimesh.obj `if test -f 'collision_trimesh_trimesh.cpp'; then $(CYGPATH_W) 'collision_trimesh_trimesh.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_trimesh.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_trimesh.Tpo $(DEPDIR)/libode_a-collision_trimesh_trimesh.Po
#	source='collision_trimesh_trimesh.cpp' object='libode_a-collision_trimesh_trimesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_trimesh.obj `if test -f 'collision_trimesh_trimesh.cpp'; then $(CYGPATH_W) 'collision_trimesh_trimesh.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_trimesh.cpp'; fi`

libode_a-collision_trimesh_sphere.o: collision_trimesh_sphere.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_sphere.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_sphere.Tpo -c -o libode_a-collision_trimesh_sphere.o `test -f 'collision_trimesh_sphere.cpp' || echo '$(srcdir)/'`collision_trimesh_sphere.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_sphere.Tpo $(DEPDIR)/libode_a-collision_trimesh_sphere.Po
#	source='collision_trimesh_sphere.cpp' object='libode_a-collision_trimesh_sphere.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_sphere.o `test -f 'collision_trimesh_sphere.cpp' || echo '$(srcdir)/'`collision_trimesh_sphere.cpp

libode_a-collision_trimesh_sphere.obj: collision_trimesh_sphere.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_sphere.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_sphere.Tpo -c -o libode_a-collision_trimesh_sphere.obj `if test -f 'collision_trimesh_sphere.cpp'; then $(CYGPATH_W) 'collision_trimesh_sphere.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_sphere.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_sphere.Tpo $(DEPDIR)/libode_a-collision_trimesh_sphere.Po
#	source='collision_trimesh_sphere.cpp' object='libode_a-collision_trimesh_sphere.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_sphere.obj `if test -f 'collision_trimesh_sphere.cpp'; then $(CYGPATH_W) 'collision_trimesh_sphere.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_sphere.cpp'; fi`

libode_a-collision_trimesh_ray.o: collision_trimesh_ray.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_ray.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_ray.Tpo -c -o libode_a-collision_trimesh_ray.o `test -f 'collision_trimesh_ray.cpp' || echo '$(srcdir)/'`collision_trimesh_ray.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_ray.Tpo $(DEPDIR)/libode_a-collision_trimesh_ray.Po
#	source='collision_trimesh_ray.cpp' object='libode_a-collision_trimesh_ray.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_ray.o `test -f 'collision_trimesh_ray.cpp' || echo '$(srcdir)/'`collision_trimesh_ray.cpp

libode_a-collision_trimesh_ray.obj: collision_trimesh_ray.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_ray.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_ray.Tpo -c -o libode_a-collision_trimesh_ray.obj `if test -f 'collision_trimesh_ray.cpp'; then $(CYGPATH_W) 'collision_trimesh_ray.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_ray.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_ray.Tpo $(DEPDIR)/libode_a-collision_trimesh_ray.Po
#	source='collision_trimesh_ray.cpp' object='libode_a-collision_trimesh_ray.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_ray.obj `if test -f 'collision_trimesh_ray.cpp'; then $(CYGPATH_W) 'collision_trimesh_ray.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_ray.cpp'; fi`

libode_a-collision_trimesh_opcode.o: collision_trimesh_opcode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_opcode.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_opcode.Tpo -c -o libode_a-collision_trimesh_opcode.o `test -f 'collision_trimesh_opcode.cpp' || echo '$(srcdir)/'`collision_trimesh_opcode.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_opcode.Tpo $(DEPDIR)/libode_a-collision_trimesh_opcode.Po
#	source='collision_trimesh_opcode.cpp' object='libode_a-collision_trimesh_opcode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_opcode.o `test -f 'collision_trimesh_opcode.cpp' || echo '$(srcdir)/'`collision_trimesh_opcode.cpp

libode_a-collision_trimesh_opcode.obj: collision_trimesh_opcode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_opcode.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_opcode.Tpo -c -o libode_a-collision_trimesh_opcode.obj `if test -f 'collision_trimesh_opcode.cpp'; then $(CYGPATH_W) 'collision_trimesh_opcode.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_opcode.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_opcode.Tpo $(DEPDIR)/libode_a-collision_trimesh_opcode.Po
#	source='collision_trimesh_opcode.cpp' object='libode_a-collision_trimesh_opcode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_opcode.obj `if test -f 'collision_trimesh_opcode.cpp'; then $(CYGPATH_W) 'collision_trimesh_opcode.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_opcode.cpp'; fi`

libode_a-collision_trimesh_box.o: collision_trimesh_box.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_box.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_box.Tpo -c -o libode_a-collision_trimesh_box.o `test -f 'collision_trimesh_box.cpp' || echo '$(srcdir)/'`collision_trimesh_box.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_box.Tpo $(DEPDIR)/libode_a-collision_trimesh_box.Po
#	source='collision_trimesh_box.cpp' object='libode_a-collision_trimesh_box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_box.o `test -f 'collision_trimesh_box.cpp' || echo '$(srcdir)/'`collision_trimesh_box.cpp

libode_a-collision_trimesh_box.obj: collision_trimesh_box.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_box.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_box.Tpo -c -o libode_a-collision_trimesh_box.obj `if test -f 'collision_trimesh_box.cpp'; then $(CYGPATH_W) 'collision_trimesh_box.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_box.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_box.Tpo $(DEPDIR)/libode_a-collision_trimesh_box.Po
#	source='collision_trimesh_box.cpp' object='libode_a-collision_trimesh_box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_box.obj `if test -f 'collision_trimesh_box.cpp'; then $(CYGPATH_W) 'collision_trimesh_box.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_box.cpp'; fi`

libode_a-collision_trimesh_ccylinder.o: collision_trimesh_ccylinder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_ccylinder.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_ccylinder.Tpo -c -o libode_a-collision_trimesh_ccylinder.o `test -f 'collision_trimesh_ccylinder.cpp' || echo '$(srcdir)/'`collision_trimesh_ccylinder.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_ccylinder.Tpo $(DEPDIR)/libode_a-collision_trimesh_ccylinder.Po
#	source='collision_trimesh_ccylinder.cpp' object='libode_a-collision_trimesh_ccylinder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_ccylinder.o `test -f 'collision_trimesh_ccylinder.cpp' || echo '$(srcdir)/'`collision_trimesh_ccylinder.cpp

libode_a-collision_trimesh_ccylinder.obj: collision_trimesh_ccylinder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_ccylinder.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_ccylinder.Tpo -c -o libode_a-collision_trimesh_ccylinder.obj `if test -f 'collision_trimesh_ccylinder.cpp'; then $(CYGPATH_W) 'collision_trimesh_ccylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_ccylinder.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_ccylinder.Tpo $(DEPDIR)/libode_a-collision_trimesh_ccylinder.Po
#	source='collision_trimesh_ccylinder.cpp' object='libode_a-collision_trimesh_ccylinder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_ccylinder.obj `if test -f 'collision_trimesh_ccylinder.cpp'; then $(CYGPATH_W) 'collision_trimesh_ccylinder.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_ccylinder.cpp'; fi`

libode_a-collision_trimesh_distance.o: collision_trimesh_distance.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_distance.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_distance.Tpo -c -o libode_a-collision_trimesh_distance.o `test -f 'collision_trimesh_distance.cpp' || echo '$(srcdir)/'`collision_trimesh_distance.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_distance.Tpo $(DEPDIR)/libode_a-collision_trimesh_distance.Po
#	source='collision_trimesh_distance.cpp' object='libode_a-collision_trimesh_distance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_distance.o `test -f 'collision_trimesh_distance.cpp' || echo '$(srcdir)/'`collision_trimesh_distance.cpp

libode_a-collision_trimesh_distance.obj: collision_trimesh_distance.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_distance.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_distance.Tpo -c -o libode_a-collision_trimesh_distance.obj `if test -f 'collision_trimesh_distance.cpp'; then $(CYGPATH_W) 'collision_trimesh_distance.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_distance.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_distance.Tpo $(DEPDIR)/libode_a-collision_trimesh_distance.Po
#	source='collision_trimesh_distance.cpp' object='libode_a-collision_trimesh_distance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_distance.obj `if test -f 'collision_trimesh_distance.cpp'; then $(CYGPATH_W) 'collision_trimesh_distance.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_distance.cpp'; fi`

libode_a-collision_cylinder_trimesh.o: collision_cylinder_trimesh.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_trimesh.o -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_trimesh.Tpo -c -o libode_a-collision_cylinder_trimesh.o `test -f 'collision_cylinder_trimesh.cpp' || echo '$(srcdir)/'`collision_cylinder_trimesh.cpp
	mv -f $(DEPDIR)/libode_a-collision_cylinder_trimesh.Tpo $(DEPDIR)/libode_a-collision_cylinder_trimesh.Po
#	source='collision_cylinder_trimesh.cpp' object='libode_a-collision_cylinder_trimesh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_trimesh.o `test -f 'collision_cylinder_trimesh.cpp' || echo '$(srcdir)/'`collision_cylinder_trimesh.cpp

libode_a-collision_cylinder_trimesh.obj: collision_cylinder_trimesh.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_cylinder_trimesh.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_cylinder_trimesh.Tpo -c -o libode_a-collision_cylinder_trimesh.obj `if test -f 'collision_cylinder_trimesh.cpp'; then $(CYGPATH_W) 'collision_cylinder_trimesh.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_trimesh.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_cylinder_trimesh.Tpo $(DEPDIR)/libode_a-collision_cylinder_trimesh.Po
#	source='collision_cylinder_trimesh.cpp' object='libode_a-collision_cylinder_trimesh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_cylinder_trimesh.obj `if test -f 'collision_cylinder_trimesh.cpp'; then $(CYGPATH_W) 'collision_cylinder_trimesh.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_cylinder_trimesh.cpp'; fi`

libode_a-collision_trimesh_plane.o: collision_trimesh_plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_plane.o -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_plane.Tpo -c -o libode_a-collision_trimesh_plane.o `test -f 'collision_trimesh_plane.cpp' || echo '$(srcdir)/'`collision_trimesh_plane.cpp
	mv -f $(DEPDIR)/libode_a-collision_trimesh_plane.Tpo $(DEPDIR)/libode_a-collision_trimesh_plane.Po
#	source='collision_trimesh_plane.cpp' object='libode_a-collision_trimesh_plane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_plane.o `test -f 'collision_trimesh_plane.cpp' || echo '$(srcdir)/'`collision_trimesh_plane.cpp

libode_a-collision_trimesh_plane.obj: collision_trimesh_plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libode_a-collision_trimesh_plane.obj -MD -MP -MF $(DEPDIR)/libode_a-collision_trimesh_plane.Tpo -c -o libode_a-collision_trimesh_plane.obj `if test -f 'collision_trimesh_plane.cpp'; then $(CYGPATH_W) 'collision_trimesh_plane.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_plane.cpp'; fi`
	mv -f $(DEPDIR)/libode_a-collision_trimesh_plane.Tpo $(DEPDIR)/libode_a-collision_trimesh_plane.Po
#	source='collision_trimesh_plane.cpp' object='libode_a-collision_trimesh_plane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libode_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libode_a-collision_trimesh_plane.obj `if test -f 'collision_trimesh_plane.cpp'; then $(CYGPATH_W) 'collision_trimesh_plane.cpp'; else $(CYGPATH_W) '$(srcdir)/collision_trimesh_plane.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(traplibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-noinstLIBRARIES \
	clean-traplibPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-traplibPROGRAMS

install-dvi: install-dvi-am

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES uninstall-traplibPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-noinstLIBRARIES clean-traplibPROGRAMS \
	ctags distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-traplibPROGRAMS \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLIBRARIES uninstall-traplibPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
